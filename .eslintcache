[{"C:\\X-Corp Projects\\movie-booking-co\\src\\utils\\api.js":"1","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\profile\\Profile.js":"2","C:\\X-Corp Projects\\movie-booking-co\\src\\store\\reducers\\index.js":"3","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"4","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"5","C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\Loader.js":"6","C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\header\\Header.js":"7","C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"8","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\screen\\Screen.js":"9","C:\\X-Corp Projects\\movie-booking-co\\src\\store\\actions\\theater.js":"10","C:\\X-Corp Projects\\movie-booking-co\\src\\index.js":"11","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\App.js":"12","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js":"13","C:\\X-Corp Projects\\movie-booking-co\\src\\store\\middlewares\\index.js":"14","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"15","C:\\X-Corp Projects\\movie-booking-co\\src\\theme.js":"16","C:\\X-Corp Projects\\movie-booking-co\\src\\store\\actions\\movie.js":"17","C:\\X-Corp Projects\\movie-booking-co\\src\\config\\apiConfig.js":"18","C:\\X-Corp Projects\\movie-booking-co\\src\\reportWebVitals.js":"19","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"20","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\home\\Home.js":"21","C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js":"22"},{"size":6692,"mtime":1608027639804,"results":"23","hashOfConfig":"24"},{"size":14093,"mtime":1608014215835,"results":"25","hashOfConfig":"24"},{"size":653,"mtime":1607662563526,"results":"26","hashOfConfig":"24"},{"size":7226,"mtime":1608016354692,"results":"27","hashOfConfig":"24"},{"size":2754,"mtime":1607951237311,"results":"28","hashOfConfig":"24"},{"size":1308,"mtime":1607688452163,"results":"29","hashOfConfig":"24"},{"size":10174,"mtime":1607952745685,"results":"30","hashOfConfig":"24"},{"size":2769,"mtime":1607688968883,"results":"31","hashOfConfig":"24"},{"size":11320,"mtime":1608029290152,"results":"32","hashOfConfig":"24"},{"size":627,"mtime":1607509215617,"results":"33","hashOfConfig":"24"},{"size":1131,"mtime":1608028980912,"results":"34","hashOfConfig":"24"},{"size":2292,"mtime":1608018261072,"results":"35","hashOfConfig":"24"},{"size":946,"mtime":1607677271732,"results":"36","hashOfConfig":"24"},{"size":156,"mtime":1606721968964,"results":"37","hashOfConfig":"24"},{"size":9677,"mtime":1608029415354,"results":"38","hashOfConfig":"24"},{"size":347,"mtime":1608019289866,"results":"39","hashOfConfig":"24"},{"size":394,"mtime":1606885391343,"results":"40","hashOfConfig":"24"},{"size":2009,"mtime":1608016120337,"results":"41","hashOfConfig":"24"},{"size":375,"mtime":1606721968929,"results":"42","hashOfConfig":"24"},{"size":1079,"mtime":1607962936519,"results":"43","hashOfConfig":"24"},{"size":2290,"mtime":1608016272174,"results":"44","hashOfConfig":"24"},{"size":3351,"mtime":1607922987887,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18qm9p3",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\X-Corp Projects\\movie-booking-co\\src\\utils\\api.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\profile\\Profile.js",["94"],"C:\\X-Corp Projects\\movie-booking-co\\src\\store\\reducers\\index.js",[],["95","96"],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\Loader.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\header\\Header.js",["97"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { header, headerText } from '../../theme'\r\nimport { AppBar, Toolbar, Avatar, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { setCityAndMoviesList, setMovieAndTheaterList } from '../../store/actions/shared'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport clsx from 'clsx';\r\nimport { userProfilePhoto } from '../../config/apiConfig'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport '../../../src/index.css'\r\nimport { handleLogoutUser } from \"../../store/actions/authedUser\"\r\nimport Loader from \"../Loader\"\r\n\r\nconst drawerWidth = 240;\r\nconst styles = (theme) => ({\r\n    logo: {\r\n        height: 80,\r\n        width: 300\r\n    },\r\n    color: {\r\n        backgroundColor: header,\r\n        color: headerText\r\n    },\r\n    toolBar: {\r\n        justifyContent: 'space-between'\r\n    },\r\n    leftDiv: {\r\n        justifyContent: 'space-around',\r\n        width: '35%',\r\n        padding: '10px',\r\n        alignItems: 'center',\r\n        margin: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    userName: {\r\n        flexDirection: 'column',\r\n        display: 'contents'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: header,\r\n        color: headerText,\r\n        height: '95px'\r\n    },\r\n    select: {\r\n        color: headerText,\r\n        '&:before': {\r\n            borderColor: headerText,\r\n        },\r\n        '&:after': {\r\n            borderColor: headerText,\r\n        }\r\n    },\r\n    icon: {\r\n        fill: headerText,\r\n    },\r\n})\r\n\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n    handleLogout = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(handleLogoutUser());\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    onCityChange = (event) => {\r\n        const cityId = event.target.value;\r\n        const { listOfCities, dispatch, selectedMovie } = this.props; // from home component\r\n        const selectedCityObject = listOfCities.filter(city => city.id === cityId);\r\n        if (Object.keys(selectedMovie).length === 0) {\r\n            dispatch(setCityAndMoviesList(selectedCityObject[0]))\r\n        }\r\n        else {\r\n            dispatch(setCityAndMoviesList(selectedCityObject[0]))\r\n            dispatch(setMovieAndTheaterList(selectedMovie, false))\r\n        }\r\n        sessionStorage.setItem('city', JSON.stringify(selectedCityObject[0]))\r\n    }\r\n\r\n    render() {\r\n        const { classes, listOfCities, selectedCity, authedUser, loading } = this.props;\r\n        const { open } = this.state;\r\n        if (loading) return <Loader />\r\n        return (\r\n            <header>\r\n                <AppBar position=\"static\" className={clsx([classes.appBar, classes.color], {\r\n                    [classes.appBarShift]: open\r\n                })}>\r\n                    <Toolbar className=\"toolBar\">\r\n                        <div>\r\n                            <Link to='/'>\r\n                                <img className={classes.logo} src=\"/brand.png\" alt=\"moviebooking\" />\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"leftDiv\">\r\n                            {(listOfCities !== undefined && <Select className={classes.select}\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        icon: classes.icon,\r\n                                    },\r\n                                }}\r\n                                labelId=\"demo-simple-select-filled-label\"\r\n                                id=\"demo-simple-select-filled\"\r\n                                value={selectedCity.id}\r\n                                onChange={this.onCityChange}\r\n                            >\r\n                                {listOfCities.map(city =>\r\n                                    <MenuItem key={city.id} value={city.id}><em>{city.cityName}</em></MenuItem>\r\n                                )}\r\n                            </Select>)}\r\n                            {(authedUser === null || authedUser === undefined) && (\r\n                                <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                                    <ButtonGroup>\r\n                                        <Button style={{ backgroundColor: header, color: headerText, border: `1px solid ${headerText}` }}>\r\n                                            Log In\r\n                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Link>\r\n                            )}\r\n\r\n                            {authedUser !== null && authedUser !== undefined\r\n                                ? <React.Fragment>\r\n                                    <Typography variant=\"body1\">Welcome {authedUser.response.fullName}</Typography>\r\n                                    {(authedUser.response.imageUrl !== null\r\n                                        ? <Avatar alt=\"user\" src={userProfilePhoto + authedUser.response.imageUrl} style={{ backgroundColor: '#F5F4F2', color: headerText }} />\r\n                                        : <AccountCircleIcon style={{ fontSize: '2.5em' }} />)}\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        aria-label=\"open drawer\"\r\n                                        onClick={this.handleDrawerOpen}\r\n                                        className={clsx(open && classes.hide)}\r\n                                        edge=\"start\"\r\n                                    >\r\n                                        <MenuIcon />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                                : <React.Fragment>\r\n                                    <Typography variant=\"body1\">Welcome Guest</Typography>\r\n                                    <AccountCircleIcon style={{ fontSize: '2.5em' }} />\r\n                                </React.Fragment>\r\n                            }\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={this.handleDrawerClose} style={{ color: headerText }}>\r\n                            <ChevronRightIcon />\r\n                            <Typography variant=\"subtitle1\" component=\"h5\">Hi!</Typography>\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key='profile' component={Link} to=\"/profile\">\r\n                            <ListItemIcon><AccountCircleIcon /></ListItemIcon>\r\n                            <ListItemText primary='My Profile' />\r\n                        </ListItem>\r\n                        <ListItem button key='bookingsHistory' component={Link} to=\"/upcoming\">\r\n                            <ListItemIcon><ConfirmationNumberIcon /></ListItemIcon>\r\n                            <ListItemText primary='My Bookings' />\r\n                        </ListItem>\r\n                        <ListItem button key='signout' onClick={this.handleLogout}\r\n                            style={{ backgroundColor: header, color: headerText, textAlign: 'center' }}>\r\n                            <ListItemText primary='Sign Out' />\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, selectedCity, selectedMovie, loading }, ownProps) {\r\n    const { listOfCities } = ownProps;\r\n\r\n    return {\r\n        listOfCities,\r\n        selectedCity,\r\n        authedUser,\r\n        selectedMovie,\r\n        loading\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(Header))",["98","99"],"C:\\X-Corp Projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\screen\\Screen.js",["100","101"],"C:\\X-Corp Projects\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\index.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\App.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\store\\middlewares\\index.js",[],["102","103"],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",["104","105"],"C:\\X-Corp Projects\\movie-booking-co\\src\\theme.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\store\\actions\\movie.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\reportWebVitals.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["106"],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\X-Corp Projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js",[],{"ruleId":"107","severity":1,"message":"108","line":315,"column":19,"nodeType":"109","endLine":319,"endColumn":21},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":24,"column":16,"nodeType":"116","messageId":"117","endLine":24,"endColumn":24},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"114","severity":1,"message":"120","line":8,"column":22,"nodeType":"116","messageId":"117","endLine":8,"endColumn":37},{"ruleId":"114","severity":1,"message":"121","line":8,"column":39,"nodeType":"116","messageId":"117","endLine":8,"endColumn":58},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"120","line":19,"column":30,"nodeType":"116","messageId":"117","endLine":19,"endColumn":45},{"ruleId":"114","severity":1,"message":"121","line":19,"column":47,"nodeType":"116","messageId":"117","endLine":19,"endColumn":66},{"ruleId":"114","severity":1,"message":"124","line":15,"column":9,"nodeType":"116","messageId":"117","endLine":15,"endColumn":16},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["125"],["126"],"'buttonAvailable' is defined but never used.","'buttonAvailableText' is defined but never used.",["125"],["126"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]