[{"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"1","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"2","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\index.js":"3","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\Purchase.js":"4","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js":"5","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"6","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"7","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"8","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"9","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\header\\Header.js":"10","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\config\\apiConfig.js":"11","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js":"12","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\shared.js":"13","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"14","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"15","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"16","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"17","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\Home.js":"18","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js":"19","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"20","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\index.js":"21","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\City.js":"22","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theater.js":"23","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\movie.js":"24","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js":"25","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js":"26","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\index.js":"27","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"28","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\theater.js":"29"},{"size":3077,"mtime":1607428568016,"results":"30","hashOfConfig":"31"},{"size":1617,"mtime":1607421653742,"results":"32","hashOfConfig":"31"},{"size":902,"mtime":1607492768448,"results":"33","hashOfConfig":"31"},{"size":2919,"mtime":1607407786600,"results":"34","hashOfConfig":"31"},{"size":4400,"mtime":1607492707994,"results":"35","hashOfConfig":"31"},{"size":2618,"mtime":1607247411930,"results":"36","hashOfConfig":"31"},{"size":5838,"mtime":1607407786598,"results":"37","hashOfConfig":"31"},{"size":2915,"mtime":1607431032230,"results":"38","hashOfConfig":"31"},{"size":3489,"mtime":1607425346690,"results":"39","hashOfConfig":"31"},{"size":8597,"mtime":1607497213799,"results":"40","hashOfConfig":"31"},{"size":1458,"mtime":1607428111223,"results":"41","hashOfConfig":"31"},{"size":1010,"mtime":1607490782692,"results":"42","hashOfConfig":"31"},{"size":1775,"mtime":1607429600668,"results":"43","hashOfConfig":"31"},{"size":2112,"mtime":1607311674354,"results":"44","hashOfConfig":"31"},{"size":231,"mtime":1607430217226,"results":"45","hashOfConfig":"31"},{"size":241,"mtime":1607430230143,"results":"46","hashOfConfig":"31"},{"size":971,"mtime":1607430947891,"results":"47","hashOfConfig":"31"},{"size":1877,"mtime":1607414642527,"results":"48","hashOfConfig":"31"},{"size":12581,"mtime":1607407786603,"results":"49","hashOfConfig":"31"},{"size":3161,"mtime":1607407786601,"results":"50","hashOfConfig":"31"},{"size":490,"mtime":1607407786609,"results":"51","hashOfConfig":"31"},{"size":1385,"mtime":1607342491705,"results":"52","hashOfConfig":"31"},{"size":247,"mtime":1606827485396,"results":"53","hashOfConfig":"31"},{"size":237,"mtime":1606803965986,"results":"54","hashOfConfig":"31"},{"size":769,"mtime":1607247411924,"results":"55","hashOfConfig":"31"},{"size":297,"mtime":1606720415312,"results":"56","hashOfConfig":"31"},{"size":156,"mtime":1606720415312,"results":"57","hashOfConfig":"31"},{"size":4433,"mtime":1607247411926,"results":"58","hashOfConfig":"31"},{"size":627,"mtime":1606884581373,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"7vr4j6",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",["136","137","138"],"import React, { Component } from 'react'\r\nimport BookingHistory from './bookingHistory/BookingHistory'\r\nimport Header from '../../shared-components/header/Header'\r\nimport Footer from '../../shared-components/footer/Footer'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link, Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport {getAllBookings} from '../../utils/api'\r\nimport { background, buttonAvailable ,header, headerText} from '../../theme'\r\n\r\n\r\nexport default class MyBookings extends Component {\r\n    state = {\r\n        value: 0,\r\n        upcomingBookings: [],\r\n        previousBookings: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        getAllBookings()\r\n        .then(response => {\r\n            const previous = response.filter(ticket => ticket.dateOfShow.split('T')[0] < new Date().toISOString().split('T')[0]);\r\n            const upcoming = response.filter(ticket => ticket.dateOfShow.split('T')[0] > new Date().toISOString().split('T')[0]);\r\n            return {previous, upcoming}\r\n        }).then(({previous, upcoming}) => this.setState({\r\n            previousBookings: previous,\r\n            upcomingBookings: upcoming\r\n            })\r\n        )\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    \r\n    render() {\r\n        const {value} = this.state;\r\n        return (\r\n        <React.Fragment>\r\n            <Header listOfCities = {this.props.listOfCities}/>\r\n            <BrowserRouter>\r\n                <AppBar position=\"static\" style={{backgroundColor: headerText, color: header}}>\r\n                    <Tabs value={value} onChange={this.handleChange} \r\n                            TabIndicatorProps={{\r\n                                style: {\r\n                                  \r\n                                  backgroundColor: header}\r\n                              }}\r\n                            fullWidth\r\n                            aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Upcoming Bookings\" id=\"upcomingBookingsTabPanel\"\r\n                                aria-controls=\"upcomingBookingsTabPanel\"\r\n                                component={Link} to=\"/upcoming\"/>\r\n                        <Tab label=\"Previous Bookings\" id=\"bookingHistoryTabPanel\"\r\n                                aria-controls=\"bookingHistoryTabPanel\"\r\n                                component={Link} to=\"/previous\"/>\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <Switch>\r\n                    <Route path=\"/upcoming\">\r\n                        <BookingHistory bookings={this.state.upcomingBookings}/>\r\n                    </Route>\r\n                    <Route path=\"/previous\">\r\n                        <BookingHistory bookings={this.state.previousBookings}/>\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n            {/* <BookingHistory /> */}\r\n            {/* <Footer /> */}\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}",["139","140"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],["141","142"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\index.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\Purchase.js",["143","144","145","146","147","148","149","150","151"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Ticket from '../../shared-components/ticket/Ticket'\r\nimport PaymentForm from './payment-form/PaymentForm'\r\nimport { ArrowBackIosRounded } from '@material-ui/icons'\r\nimport { headerText, } from '../../theme'\r\nimport { IconButton } from '@material-ui/core'\r\n\r\nclass Purchase extends Component {\r\n\r\n    state = {\r\n        bookingStatus: ''\r\n    }\r\n\r\n    purchaseTicket = (event) => {\r\n        event.preventDefault()\r\n        const { theaterDetails, screenName, selectedSeats, price, movieName, time, date, seatPlanId } = this.props\r\n        // purchaseTickets({ theaterDetails, screenName, selectedSeats, price, movieName, time, date, seatPlanId }).then(\r\n        //     response => {\r\n        //         if(response.bookingStatus === 'BOOKED'){\r\n        //             this.setState({\r\n        //                 bookingStatus: 'BOOKED'\r\n        //             })\r\n        //         }\r\n        //     }\r\n        // )\r\n        this.setState({\r\n            bookingStatus: 'BOOKED'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ minHeight: '100vh', width: '100%', margin: 0, padding: 0 }}>\r\n                <div className='screen-header'>\r\n                    <IconButton >\r\n                        <ArrowBackIosRounded style={{ color: headerText }} />\r\n                    </IconButton>\r\n                    <span>Jab Tak Hai Jaan</span>\r\n                    <span style={{ color: 'darkgrey', marginLeft: '10px', fontSize: '0.75em' }}>\r\n                        PVR Cinemas Mumbai</span>\r\n                    <div className='screen-info'>\r\n                        <div className='info'>\r\n                            Purchase tickets\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='purchase-container'>\r\n                    <PaymentForm purchaseTicket={this.purchaseTicket} bookingStatus={this.state.bookingStatus} />\r\n                    <Ticket\r\n                        theater={{\r\n                            \"screenName\": \"s2\",\r\n                            \"dimension\": \"_2D\",\r\n                            \"theaterDetails\": 'PVR Cinemas, Mumbai',\r\n                        }}\r\n                        selectedSeats={['GR1C1', 'GR1C2']}\r\n                        price={450}\r\n                        movie={{\r\n                            \"name\": \"Jab tak hai jaan\",\r\n                            \"genre\": \"Romance\",\r\n                        }}\r\n                        time='S21'\r\n                        date='2020-11-30'\r\n                        bookingStatus={this.state.bookingStatus}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({/* selectedTheater, theater, movie, selectedSeats, price */ }) => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Purchase)",["152","153"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",["154"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TheaterCard from './TheaterCard'\r\n\r\nclass TheaterContainer extends Component {\r\n    state = {\r\n        selectedDate: new Date(new Date()).toISOString().split('T')[0]\r\n    }\r\n\r\n    getDateValue = (value) => {\r\n        const d = new Date()\r\n        d.setDate(d.getDate() + value)\r\n        return {\r\n            day: d.getDate(),\r\n            name: d.toString().split(' ')[0],\r\n            date: d.toISOString().split('T')[0]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { theatersList } = this.props;\r\n        const { selectedDate } = this.state;\r\n        return (\r\n            <div>\r\n                {/* calender Component render and pass the value to theatercard- 1 week */\r\n                    console.log(selectedDate)\r\n                }\r\n                <div className='date-container'>\r\n                    {Array.from(Array(7).keys()).map((value) =>\r\n                        selectedDate === this.getDateValue(value).date ?\r\n                            <div className='date active' key={value} onClick={() =>\r\n                                this.setState({\r\n                                    selectedDate: this.getDateValue(value).date\r\n                                })\r\n                            }>\r\n                                <span className='span-date'>{this.getDateValue(value).day}</span>\r\n                                <span className='span-name'>{this.getDateValue(value).name}</span>\r\n                            </div> :\r\n                            <div className='date' key={value} onClick={() =>\r\n                                this.setState({\r\n                                    selectedDate: this.getDateValue(value).date\r\n                                })\r\n                            }>\r\n                                <span className='span-date'>{this.getDateValue(value).day}</span>\r\n                                <span className='span-name'>{this.getDateValue(value).name}</span>\r\n                            </div>)}\r\n                </div>\r\n                {/* iterate over theatersList and render theater cards */}\r\n                <div className='theatre-container'>\r\n                    {Array.from(Array(3).keys()).map(theater =>\r\n                        <TheaterCard key={theater} theater={theater} selectedDate={selectedDate} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ theatersList }) {\r\n    return {\r\n        theatersList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TheaterContainer)",["155","156"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",["157"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getScreens } from '../../../utils/api'\r\nimport { setTheaterAndSeatPlan } from '../../../store/actions/shared'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from 'recompose/compose';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { header, headerText, buttonAvailable, buttonAvailableText } from '../../../theme'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: '60%',\r\n        height: '10%',\r\n        margin: '10px',\r\n        fontSize: '0.75em'\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: header,\r\n        color: headerText\r\n    },\r\n    action: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        color: buttonAvailableText,\r\n        backgroundColor: buttonAvailable,\r\n        margin: 7\r\n    }\r\n});\r\n\r\n\r\nclass TheaterCard extends Component {\r\n    state = {\r\n        expanded: false,\r\n        screens: null,\r\n        screenTimesArray: ['S12', 'S15', 'S18', 'S21', 'S23']\r\n    }\r\n\r\n    //when show timing btn is clicked\r\n    getScreenObject = (theater) => {\r\n        const { selectedMovie } = this.props;\r\n        getScreens(selectedMovie.movieId, theater.theaterId)\r\n            .then((screens) => {\r\n\r\n                let screenTimeArray = []\r\n                screens.forEach(screen => {\r\n                    screenTimeArray = screenTimeArray.concat(screen.screenTimes.map(time => time.showTiming))\r\n                })\r\n\r\n                this.setState({\r\n                    screens: screens,\r\n                    screenTimeArray: screenTimeArray\r\n                })\r\n            })\r\n    }\r\n\r\n    //when clicked on any show time\r\n    handleSelectedShowTime = (theater, time) => {\r\n        const { selectedDate } = this.props; // format YYYY-MM-DD\r\n        const { screens } = this.state;\r\n        const screen = screens.filter(screen => screen.screenTimes\r\n            .map(screenTime => screenTime.showTiming).includes(time))\r\n        const screenTime = screen[0].screenTimes.filter(screenTime => screenTime.showTiming === time)\r\n        const seatPlanId = screenTime[0].showDateList.filter\r\n            ((showDate => showDate.moviePlayingDate.split('T')[0] === selectedDate))[0].seatPlanId\r\n        //get seatPlanId from state based on time(S20) and date(2020-11-30)\r\n\r\n        setTheaterAndSeatPlan(theater, seatPlanId);\r\n        //navigate to seat plan page\r\n    }\r\n\r\n    handleExpandClick = () => {\r\n        this.setState(currentState => {\r\n            return {\r\n                expanded: !currentState.expanded\r\n            }\r\n        })\r\n\r\n        //this.getScreenObject(this.props.theater)\r\n    }\r\n\r\n    render() {\r\n        const { theater, classes } = this.props;\r\n        const { screenTimesArray } = this.state;\r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                            {/* {theater.rating} */}4.5\r\n                        </Avatar>\r\n                    }\r\n                    title=\"PVR Cinemas\"\r\n                    subheader=\"Near CST Railway Station, Mumbai - 201006, Maharashtra\"\r\n                />\r\n                <CardActions className={classes.action}>\r\n                    <Tooltip title=\"Expand to check on movie screening times\" aria-label=\"add\">\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: this.state.expanded,\r\n                            })}\r\n                            onClick={this.handleExpandClick}\r\n                            aria-expanded={this.state.expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </CardActions>\r\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Show Timings :</Typography>\r\n                        {screenTimesArray.map(time =>\r\n                            <Button className={classes.button}>\r\n                                {time.split('S')[1]}:00\r\n                            </Button>)}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ selectedMovie }, ownProps) {\r\n    const { theater, selectedDate } = ownProps;\r\n    return {\r\n        theater,\r\n        selectedMovie,\r\n        selectedDate\r\n    }\r\n}\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(TheaterCard);\r\n\r\n\r\n","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",["158","159"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMovieAndTheaterList } from '../../../store/actions/shared';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MovieCard from './components/MovieCard'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { GridListTile } from '@material-ui/core';\r\nimport MovieCarousel from './components/MovieCarousel'\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\n\r\nclass MovieContainer extends Component {\r\n    state = {\r\n        movieSelected: false\r\n    }\r\n\r\n    handleSelectedMovie = (movie) => {\r\n        const { dispatch } = this.props;\r\n        const { movieSelected } = this.state;\r\n        dispatch(setMovieAndTheaterList(movie));\r\n        this.setState({\r\n            movieSelected: true\r\n        })\r\n            // dispatch movie object and theatersList to store\r\n            // setstate to true\r\n            // navigate to moviepage\r\n\t}\r\n\t\r\n\tgetGridListCols = () => {\r\n\t\tif (isWidthUp('xl', this.props.width)) {\r\n\t\t  return 5;\r\n\t\t}\r\n\t\r\n\t\tif (isWidthUp('lg', this.props.width)) {\r\n\t\t  return 4;\r\n\t\t}\r\n\t\r\n\t\tif (isWidthUp('md', this.props.width)) {\r\n\t\t  return 3;\r\n\t\t}\r\n\t\r\n\t\treturn 1;\r\n\t  }\r\n\r\n    render() {\r\n       // const {moviesList} = this.state;\r\n        const {moviesList} = this.props;\r\n        return (\r\n            <div>\r\n\t\t\t\t<React.Fragment>\r\n                \t<MovieCarousel moviesList={moviesList} handleSelectedMovie={this.handleSelectedMovie}/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t<div style={{margin:25, padding: 10}}>\r\n\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\" style={{fontWeight:'bold'}}>\r\n\t\t\t\t\t\tCurrently Running\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<GridList style={{flexWrap: 'wrap'}} cols={this.getGridListCols()} spacing={15}>\r\n\t\t\t\t\t{moviesList.filter(movie => new Date(movie.dateReleased) < new Date()).map(movie => \r\n\t\t\t\t\t<GridListTile  key={movie.movieId} style={{height:'100%'}}>\r\n\t\t\t\t\t\t<MovieCard  movie ={movie} handleSelectedMovie={this.handleSelectedMovie}/> \r\n\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t)} \r\n\t\t\t\t\t</GridList>\r\n\t\t\t\t </div>\r\n\t\t\t\t \r\n\t\t\t\t<div style={{margin:25, padding: 10}}>\r\n\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"h2\" style={{fontWeight:'bold'}}>\r\n\t\t\t\t\t\tUpcoming Movies\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<GridList style={{flexWrap: 'nowrap'}} cols={this.getGridListCols()} spacing={15}>\r\n\t\t\t\t\t{moviesList.filter(movie => new Date(movie.dateReleased) > new Date()).map(movie => \r\n\t\t\t\t\t<GridListTile key={movie.movieId} style={{height:'100%'}}>\r\n\t\t\t\t\t\t<MovieCard movie ={movie} handleSelectedMovie={this.handleSelectedMovie}/> \r\n\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t)} \r\n\t\t\t\t\t</GridList>\r\n\t\t\t\t </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({moviesList}) {\r\n    return {\r\n        moviesList\r\n    }\r\n}\r\n\r\nexport default withWidth()(connect(mapStateToProps)(MovieContainer))","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\header\\Header.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js",["160"],"import React, { Component } from 'react'\r\nimport { getCities } from '../utils/api'\r\nimport Home from './home/Home'\r\nimport Screen from './screen/Screen'\r\nimport Ticket from '../shared-components/ticket/Ticket'\r\nimport Movie from './movie/Movie'\r\nimport Purchase from './purchase/Purchase'\r\nimport MyBookings from './myBookings/MyBookings'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    listOfCities: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    getCities()\r\n    .then(res => {\r\n      this.setState({\r\n        listOfCities: res\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { listOfCities } = this.state;\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        {/* {console.log(JSON.stringify(listOfCities))} */}\r\n        {/* {<Home listOfCities= {listOfCities} />} */}\r\n        {/* <Movie /> */}\r\n        <Home listOfCities= {listOfCities} />\r\n        {/* <Purchase /> */}\r\n        {/* <MyBookings listOfCities= {listOfCities} /> */}\r\n      \r\n        </Router></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\shared.js",["161","162","163","164"],"import { setSelectedCity } from './city';\r\nimport { getAllMovies, setSelectedMovie } from './movie';\r\nimport { getMovies, getTheaters, getScreens, getSeatPlan, lockSeats, purchaseTickets } from '../../utils/api';\r\nimport { getAllTheaters, setSeatPlan, setSelectedTheater, setShowTimings } from './theater';\r\nimport seatPlan from '../reducers/seatPlan';\r\n\r\nexport const SET_SEATS_AND_PRICE = 'SET_SEATS_AND_PRICE'\r\n\r\nexport function setCityAndMoviesList(city) {\r\n    return (dispatch) => {\r\n        //dispatch selected city to store\r\n        dispatch(setSelectedCity(city));\r\n        //api call to fetch all movies in the selected city and dispatch the moviesList to store\r\n        getMovies(city.id)\r\n            .then(moviesList => dispatch(getAllMovies(moviesList)))\r\n    }\r\n}\r\n\r\nexport function setMovieAndTheaterList(movie) {\r\n    return (dispatch, getState) => {\r\n        const { selectedCity } = getState();\r\n        dispatch(setSelectedMovie(movie));\r\n        getTheaters(selectedCity.id, movie.movieId)\r\n            .then(theatersList => dispatch(getAllTheaters(theatersList)))\r\n    }\r\n}\r\n\r\nexport function setTheaterAndSeatPlan(theater, seatPlanId) {\r\n    return (dispatch) => {\r\n        dispatch(setSelectedTheater(theater));\r\n        getSeatPlan(seatPlanId)\r\n            .then(seatPlan => dispatch(setSeatPlan(seatPlan)))\r\n    }\r\n}\r\n\r\nfunction lockSeatsAndPrice(selectedSeats, price) {\r\n    return {\r\n        type: SET_SEATS_AND_PRICE,\r\n        selectedSeats,\r\n        price\r\n    }\r\n}\r\n\r\nexport function setSeatsAndPrice(selectedSeats, seatPlanId, price) {\r\n    return (dispatch) => {\r\n        lockSeats(seatPlanId, selectedSeats)\r\n            .then(response => response ? dispatch(lockSeatsAndPrice(selectedSeats, price)) : console.error('error'))\r\n    }\r\n}\r\n\r\n\r\n",["165","166"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",["167","168","169","170"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {Paper } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    minWidth: 100\r\n  },\r\n});\r\n\r\nexport default function MovieCard(props) {\r\n  const classes = useStyles();\r\n  const {movie, handleSelectedMovie} = props;\r\n\r\n  return (\r\n      (movie !== undefined &&\r\n        <Paper style={{width:'100%'}} onClick={()=> handleSelectedMovie(movie)} >\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={movie.name}\r\n          height=\"140\"\r\n          image=\"/moviePoster.jpg\"\r\n          //{movie.moviePoster}\r\n          title=\"Movie\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {movie.name}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h4\">\r\n            {movie.movieDimension}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h4\">\r\n            {movie.genre}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h5\">\r\n                {movie.rating}\r\n            </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {/* <CardActions>\r\n        <IconButton aria-label=\"rating\">\r\n            <StarIcon />\r\n            </IconButton>\r\n            <Typography gutterBottom variant=\"body1\" component=\"h5\">\r\n                {movie.rating}\r\n            </Typography>\r\n      </CardActions> */}\r\n    </Card>\r\n    </Paper>\r\n      )\r\n  );\r\n}",["171","172"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],["173","174"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["175","176","177"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\Home.js",[],["178","179"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js",["180"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from 'recompose/compose';\r\nimport { CardContent, Typography, IconButton, Button } from '@material-ui/core';\r\nimport { ArrowBackIosRounded } from '@material-ui/icons'\r\nimport { headerText, buttonAvailable, buttonAvailableText } from '../../theme'\r\nimport { setSeatsAndPrice } from '../../store/actions/shared'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: '70%',\r\n        borderBottom: 'none',\r\n        borderTop: 'none',\r\n    },\r\n\r\n})\r\n\r\nclass Screen extends Component {\r\n    state = {\r\n        selectedSeats: [],\r\n        price: 0\r\n    }\r\n\r\n    calculatePrice(theater, selectedSeats) {\r\n        let price = 0;\r\n        selectedSeats.forEach(seat => {\r\n            if (seat.charAt(0) === \"G\") {\r\n                price = price + theater.priceOfDifferentSeatType.GOLD;\r\n            }\r\n            else if (seat.charAt(0) === \"P\") {\r\n                price = price + theater.priceOfDifferentSeatType.PLATINUM;\r\n            }\r\n            else if (seat.charAt(0) === \"D\") {\r\n                price = price + theater.priceOfDifferentSeatType.DIAMOND;\r\n            }\r\n        })\r\n        return price;\r\n    }\r\n\r\n    selectSeat = (seat) => {\r\n        this.setState(currentState => {\r\n            let selectedSeats = []\r\n            let price = 0\r\n            if (currentState.selectedSeats.includes(seat)) {\r\n                selectedSeats = currentState.selectedSeats.filter(seatValue => seatValue !== seat)\r\n                price = this.calculatePrice(this.props.theater, selectedSeats)\r\n            }\r\n            else {\r\n                selectedSeats = currentState.selectedSeats.concat(seat)\r\n                price = this.calculatePrice(this.props.theater, selectedSeats)\r\n            }\r\n            return {\r\n                selectedSeats: selectedSeats,\r\n                price: price\r\n            }\r\n        })\r\n    }\r\n\r\n    purchaseSeats = () => {\r\n        if (this.props.authedUser === null || this.props.authedUser === undefined) {\r\n            /*Store state information in local storage*/\r\n            localStorage.setItem('selectedSeats', this.state.selectedSeats)\r\n            localStorage.setItem('movie', this.props.movie)\r\n            localStorage.setItem('theater', this.props.theater)\r\n            localStorage.setItem('price', this.props.price)\r\n        }\r\n        else {\r\n            /*Redirect to payment page and store state information in redux store*/\r\n            this.props.dispatch(setSeatsAndPrice(this.state.selectedSeats, this.props.seatPlanId, this.state.price))\r\n        }\r\n    }\r\n\r\n    createSeatMap = (theater) => {\r\n        let seatMap = [];\r\n        Object.keys(theater.noOfRowsPerSeatType).forEach(seatType => {\r\n            let seatTypeMap = [];\r\n            Array.from(Array(theater.noOfRowsPerSeatType[seatType]).keys()).forEach(\r\n                (row) => {\r\n                    let seatRow = [];\r\n                    Array.from(Array(theater.columns).keys()).forEach(\r\n                        (col) => {\r\n                            seatRow.push(seatType.charAt(0) + 'R' + (row + 1) + 'C' + + (col + 1))\r\n                        }\r\n                    )\r\n                    seatTypeMap.push(seatRow);\r\n                }\r\n            )\r\n            seatMap.push(seatTypeMap)\r\n        })\r\n\r\n        return seatMap;\r\n    }\r\n\r\n    render() {\r\n        const { seatPlan, theater, movie, classes } = this.props\r\n        const seatMap = this.createSeatMap(theater)\r\n        return (\r\n            <div style={{ minHeight: '100vh', width: '100%', margin: 0, padding: 0 }}>\r\n                <div className='screen-header'>\r\n                    <IconButton >\r\n                        <ArrowBackIosRounded style={{ color: headerText }} />\r\n                    </IconButton>\r\n                    <span>{movie.name}</span>\r\n                    <span style={{ color: 'darkgrey', marginLeft: '10px', fontSize: '0.75em' }}>\r\n                        PVR Cinemas Pune</span>\r\n                    <div className='screen-info'>\r\n                        <div className='info'>\r\n                            <div className='seat' style={{ fontSize: '0.7em' }}>Available Seats</div>\r\n                            <div className='seat chosen' style={{ fontSize: '0.7em' }}>Selected Seats</div>\r\n                            <div className='seat booked' style={{ fontSize: '0.7em' }}>Unavailable Seats</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='seat-container'>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        {Object.keys(theater.noOfRowsPerSeatType).map((seatType, index) => (\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                    {seatType + ' - Rs. ' + theater.priceOfDifferentSeatType[seatType]}\r\n                                </Typography>\r\n                                <div className='seat-map'>\r\n                                    {seatMap[index].map((row, rowindex) => (\r\n                                        <div className='seat-row'>\r\n                                            {seatMap[index][rowindex].map(\r\n                                                (col, colIndex) => (\r\n                                                    (seatPlan.lockedSeats.includes(seatMap[index][rowindex][colIndex]) ?\r\n                                                        <div className='seat booked' key={seatMap[index][rowindex][colIndex]}>\r\n                                                            {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                        </div>\r\n                                                        : (this.state.selectedSeats.includes(seatMap[index][rowindex][colIndex]) ?\r\n                                                            <div className='seat chosen' key={seatMap[index][rowindex][colIndex]}\r\n                                                                onClick={() => this.selectSeat(seatMap[index][rowindex][colIndex])}\r\n                                                            >\r\n                                                                {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                            </div>\r\n                                                            : <div className='seat' key={seatMap[index][rowindex][colIndex]}\r\n                                                                onClick={() => this.selectSeat(seatMap[index][rowindex][colIndex])}\r\n                                                            >\r\n                                                                {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                            </div>)\r\n\r\n                                                    )))}\r\n                                        </div>))}\r\n                                </div>\r\n                            </CardContent>\r\n                        ))}\r\n                        <div style={{ margin: 10, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            <Button style={{\r\n                                color: buttonAvailableText,\r\n                                backgroundColor: buttonAvailable,\r\n                            }} disabled={this.state.selectedSeats.length === 0}\r\n                            // onClick= {this.purchaseSeats}\r\n                            >\r\n                                Purchase - Rs {this.state.price}</Button>\r\n                        </div>\r\n                    </Card>\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({/* theater, seatPlan, movie, authedUser */ }) => {\r\n    const theater = {\r\n        \"screenId\": \"63f354b4-7050-4c49-a5c7-e0d646c04ae3\",\r\n        \"theaterId\": \"90f7108a-aa14-44cf-b001-a2cc43cc0a65\",\r\n        \"screenName\": \"s2\",\r\n        \"dimension\": \"_2D\",\r\n        \"screenTimes\": [\r\n            {\r\n                \"showDateList\": [\r\n                    {\r\n                        \"seatPlanId\": \"32f576a3-3076-4af3-a9e5-f6f27825ce3d\",\r\n                        \"moviePlayingDate\": \"2020-11-30T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"453f8fef-31ec-40ea-8541-8bc7346e82a6\",\r\n                        \"moviePlayingDate\": \"2020-12-01T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"4a6de352-c465-49cb-837d-b849dfe6806a\",\r\n                        \"moviePlayingDate\": \"2020-12-02T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"36e52e7a-d588-4a68-bca6-9e7d1c72a926\",\r\n                        \"moviePlayingDate\": \"2020-12-03T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"8f41a868-de05-472d-af0e-83cdc6787f09\",\r\n                        \"moviePlayingDate\": \"2020-12-04T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"b366704f-e30f-4987-a924-8d2c3b0f8b3b\",\r\n                        \"moviePlayingDate\": \"2020-12-05T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"7a75aff8-2374-4b5a-810d-df1f07c59140\",\r\n                        \"moviePlayingDate\": \"2020-12-06T13:43:57.827+00:00\"\r\n                    }\r\n                ],\r\n                \"showTiming\": \"S20\",\r\n                \"movieId\": \"4fc75cbb-c783-478f-9a0d-e49fc50699dd\"\r\n            },\r\n            {\r\n                \"showDateList\": [\r\n                    {\r\n                        \"seatPlanId\": \"57b8ace1-9644-4344-9796-601f77f37d71\",\r\n                        \"moviePlayingDate\": \"2020-11-30T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"5761d893-1656-4423-a50c-f42be28924ab\",\r\n                        \"moviePlayingDate\": \"2020-12-01T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"d2882592-efc8-490e-9e92-2ca3664bc430\",\r\n                        \"moviePlayingDate\": \"2020-12-02T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"672c299d-3779-4d1d-82ee-1c77ba704839\",\r\n                        \"moviePlayingDate\": \"2020-12-03T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"cdfe6a48-b4cf-42d8-a769-c2548b3c8b17\",\r\n                        \"moviePlayingDate\": \"2020-12-04T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"97a7c0b1-6287-4325-9309-c64e7233acd3\",\r\n                        \"moviePlayingDate\": \"2020-12-05T13:43:57.827+00:00\"\r\n                    },\r\n                    {\r\n                        \"seatPlanId\": \"fadfacdc-3d6e-4340-b967-9c93e8be6ac2\",\r\n                        \"moviePlayingDate\": \"2020-12-06T13:43:57.827+00:00\"\r\n                    }\r\n                ],\r\n                \"showTiming\": \"S23\",\r\n                \"movieId\": \"4fc75cbb-c783-478f-9a0d-e49fc50699dd\"\r\n            }\r\n        ],\r\n        \"columns\": 12,\r\n        \"noOfRowsPerSeatType\": {\r\n            \"DIAMOND\": 2,\r\n            \"GOLD\": 4,\r\n            \"PLATINUM\": 2\r\n        },\r\n        \"priceOfDifferentSeatType\": {\r\n            \"DIAMOND\": 140,\r\n            \"GOLD\": 120,\r\n            \"PLATINUM\": 100\r\n        }\r\n    }\r\n    const seatPlan = {\r\n        \"seatPlanId\": \"706b783a-412e-4733-91c1-51a748349e90\",\r\n        \"bookedSeats\": [],\r\n        \"lockedSeats\": [\r\n            \"GR1C2\",\r\n            \"PR1C2\"\r\n        ]\r\n    }\r\n    const movie = {\r\n        \"movieId\": \"f16579ce-cccf-4a4d-9825-823fa4f1d021\",\r\n        \"name\": \"Jab tak hai jaan\",\r\n        \"genre\": \"Romance\",\r\n        \"duration\": \"2.1 hrs\",\r\n        \"movieDimension\": \"_2D\",\r\n        \"rating\": 9.1,\r\n        \"dateReleased\": \"2011-12-28T00:00:00.000+00:00\",\r\n        \"casts\": [\r\n            \"Shahrukh Khan\",\r\n            \"Katrina Kaif\",\r\n            \"Anushka Sharma\"\r\n        ],\r\n        \"languages\": [\r\n            \"Hindi\",\r\n            \"English\"\r\n        ]\r\n    }\r\n    return { theater, seatPlan, movie }\r\n}\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(Screen)","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",["181"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\index.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\City.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theater.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\index.js",[],["182","183"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\theater.js",[],{"ruleId":"184","severity":1,"message":"185","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"188","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":20},{"ruleId":"184","severity":1,"message":"189","line":10,"column":22,"nodeType":"186","messageId":"187","endLine":10,"endColumn":37},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"190","replacedBy":"194"},{"ruleId":"192","replacedBy":"195"},{"ruleId":"184","severity":1,"message":"196","line":17,"column":17,"nodeType":"186","messageId":"187","endLine":17,"endColumn":31},{"ruleId":"184","severity":1,"message":"197","line":17,"column":33,"nodeType":"186","messageId":"187","endLine":17,"endColumn":43},{"ruleId":"184","severity":1,"message":"198","line":17,"column":45,"nodeType":"186","messageId":"187","endLine":17,"endColumn":58},{"ruleId":"184","severity":1,"message":"199","line":17,"column":60,"nodeType":"186","messageId":"187","endLine":17,"endColumn":65},{"ruleId":"184","severity":1,"message":"200","line":17,"column":67,"nodeType":"186","messageId":"187","endLine":17,"endColumn":76},{"ruleId":"184","severity":1,"message":"201","line":17,"column":78,"nodeType":"186","messageId":"187","endLine":17,"endColumn":82},{"ruleId":"184","severity":1,"message":"202","line":17,"column":84,"nodeType":"186","messageId":"187","endLine":17,"endColumn":88},{"ruleId":"184","severity":1,"message":"203","line":17,"column":90,"nodeType":"186","messageId":"187","endLine":17,"endColumn":100},{"ruleId":"204","severity":1,"message":"205","line":72,"column":26,"nodeType":"206","messageId":"207","endLine":72,"endColumn":88},{"ruleId":"190","replacedBy":"208"},{"ruleId":"192","replacedBy":"209"},{"ruleId":"184","severity":1,"message":"210","line":21,"column":17,"nodeType":"186","messageId":"187","endLine":21,"endColumn":29},{"ruleId":"190","replacedBy":"211"},{"ruleId":"192","replacedBy":"212"},{"ruleId":"184","severity":1,"message":"213","line":110,"column":17,"nodeType":"186","messageId":"187","endLine":110,"endColumn":24},{"ruleId":"184","severity":1,"message":"214","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":18},{"ruleId":"184","severity":1,"message":"215","line":19,"column":17,"nodeType":"186","messageId":"187","endLine":19,"endColumn":30},{"ruleId":null,"fatal":true,"severity":2,"message":"216","line":36,"column":9},{"ruleId":"184","severity":1,"message":"217","line":3,"column":34,"nodeType":"186","messageId":"187","endLine":3,"endColumn":44},{"ruleId":"184","severity":1,"message":"218","line":3,"column":70,"nodeType":"186","messageId":"187","endLine":3,"endColumn":85},{"ruleId":"184","severity":1,"message":"219","line":4,"column":59,"nodeType":"186","messageId":"187","endLine":4,"endColumn":73},{"ruleId":"184","severity":1,"message":"220","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":16},{"ruleId":"190","replacedBy":"221"},{"ruleId":"192","replacedBy":"222"},{"ruleId":"184","severity":1,"message":"223","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":19},{"ruleId":"184","severity":1,"message":"224","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":14},{"ruleId":"184","severity":1,"message":"225","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":18},{"ruleId":"184","severity":1,"message":"226","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":16},{"ruleId":"190","replacedBy":"227"},{"ruleId":"192","replacedBy":"228"},{"ruleId":"190","replacedBy":"229"},{"ruleId":"192","replacedBy":"230"},{"ruleId":"184","severity":1,"message":"231","line":13,"column":9,"nodeType":"186","messageId":"187","endLine":13,"endColumn":16},{"ruleId":"232","severity":1,"message":"233","line":21,"column":33,"nodeType":"234","endLine":21,"endColumn":115},{"ruleId":"232","severity":1,"message":"233","line":22,"column":19,"nodeType":"234","endLine":22,"endColumn":105},{"ruleId":"190","replacedBy":"235"},{"ruleId":"192","replacedBy":"236"},{"ruleId":"204","severity":1,"message":"205","line":165,"column":26,"nodeType":"206","messageId":"207","endLine":165,"endColumn":71},{"ruleId":"204","severity":1,"message":"205","line":58,"column":26,"nodeType":"206","messageId":"207","endLine":58,"endColumn":95},{"ruleId":"190","replacedBy":"237"},{"ruleId":"192","replacedBy":"238"},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'background' is defined but never used.","'buttonAvailable' is defined but never used.","no-native-reassign",["239"],"no-negated-in-lhs",["240"],["239"],["240"],"'theaterDetails' is assigned a value but never used.","'screenName' is assigned a value but never used.","'selectedSeats' is assigned a value but never used.","'price' is assigned a value but never used.","'movieName' is assigned a value but never used.","'time' is assigned a value but never used.","'date' is assigned a value but never used.","'seatPlanId' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["239"],["240"],"'theatersList' is assigned a value but never used.",["239"],["240"],"'theater' is assigned a value but never used.","'Redirect' is defined but never used.","'movieSelected' is assigned a value but never used.","Parsing error: Expected corresponding JSX closing tag for <div>\n\n  34 |         {/* <MyBookings listOfCities= {listOfCities} /> */}\n  35 |       \n> 36 |         </Router></div>\n     |         ^\n  37 |     );\n  38 |   }\n  39 | }","'getScreens' is defined but never used.","'purchaseTickets' is defined but never used.","'setShowTimings' is defined but never used.","'seatPlan' is defined but never used.",["239"],["240"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'StarIcon' is defined but never used.",["239"],["240"],["239"],["240"],"'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["239"],["240"],["239"],["240"],"no-global-assign","no-unsafe-negation"]
