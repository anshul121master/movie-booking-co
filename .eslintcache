[{"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js":"1","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js":"2","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"3","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"4","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\loading.js":"5","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"6","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js":"7","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"8","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\error\\Error.js":"9","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"10","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\city.js":"11","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js":"12","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\seatsAndPrice.js":"13","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\loading.js":"14","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"15","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"16","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"17","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"18","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"19","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\profile\\Profile.js":"20","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"21","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js":"22"},{"size":2483,"mtime":1608122047874,"results":"23","hashOfConfig":"24"},{"size":297,"mtime":1606720415312,"results":"25","hashOfConfig":"24"},{"size":3154,"mtime":1608185715777,"results":"26","hashOfConfig":"24"},{"size":7226,"mtime":1608039576030,"results":"27","hashOfConfig":"24"},{"size":140,"mtime":1607658841618,"results":"28","hashOfConfig":"24"},{"size":1079,"mtime":1608039576026,"results":"29","hashOfConfig":"24"},{"size":6693,"mtime":1608195494678,"results":"30","hashOfConfig":"24"},{"size":1854,"mtime":1608186934080,"results":"31","hashOfConfig":"24"},{"size":908,"mtime":1607591429284,"results":"32","hashOfConfig":"24"},{"size":3468,"mtime":1608184331327,"results":"33","hashOfConfig":"24"},{"size":209,"mtime":1608122047887,"results":"34","hashOfConfig":"24"},{"size":1004,"mtime":1607923594700,"results":"35","hashOfConfig":"24"},{"size":322,"mtime":1607407786611,"results":"36","hashOfConfig":"24"},{"size":200,"mtime":1607658841622,"results":"37","hashOfConfig":"24"},{"size":6016,"mtime":1608122047879,"results":"38","hashOfConfig":"24"},{"size":9744,"mtime":1608183422133,"results":"39","hashOfConfig":"24"},{"size":2754,"mtime":1607955088392,"results":"40","hashOfConfig":"24"},{"size":4128,"mtime":1608182779024,"results":"41","hashOfConfig":"24"},{"size":1782,"mtime":1607955088388,"results":"42","hashOfConfig":"24"},{"size":14090,"mtime":1608185960742,"results":"43","hashOfConfig":"24"},{"size":3911,"mtime":1608186948574,"results":"44","hashOfConfig":"24"},{"size":11685,"mtime":1608188051096,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"7vr4j6",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js",[],["93","94"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\loading.js",[],["95","96"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["97"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\error\\Error.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\city.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\seatsAndPrice.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\loading.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",["98","99"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\profile\\Profile.js",["100"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getProfile } from \"../../utils/api\";\r\nimport { uploadImage } from \"../../utils/api\";\r\nimport { updateProfile } from \"../../utils/api\";\r\nimport { userProfilePhoto } from '../../config/apiConfig'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"../../shared-components/Loader\";\r\nimport Footer from \"../../shared-components/footer/Footer\"\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  profileInfoDiv: {\r\n    width: \"100vw\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"50px\",\r\n  },\r\n  cardStyle: {\r\n    minWidth: \"70vw\",\r\n    margin: '30px 0',\r\n    backgroundColor: \"#ECEFF1\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 45,\r\n    borderRadius: 0\r\n  },\r\n\r\n  imageContainer: {\r\n    minWidth: \"100%\",\r\n    backgroundColor: \"#0A3D62\",\r\n    minHeight: \"30vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  cameraIcon: {\r\n    position: \"absolute\",\r\n    top: \"75%\",\r\n    right: \"-20px\",\r\n    size: 20,\r\n    backgroundColor: \"#d81b60\",\r\n    padding: \"9px\",\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  profileImg: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"2px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  userIcon: {\r\n    color: \"grey\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  successMessageColor: {\r\n    color: \"green\",\r\n  },\r\n  failedMessageColor: {\r\n    color: \"red\",\r\n  },\r\n  loadingPanel: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    zIndex: 100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    birthday: \"\",\r\n    imageUrl: null,\r\n    infoMessage: \"\",\r\n    loadProfileMessage: \"\",\r\n    imageUploadErrorMessage: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    getProfile().then((res) => {\r\n      if (res.status === 200) {\r\n        let userProfile = res.response;\r\n        const birthday = this.formatDate(userProfile.dateOfBirth);\r\n        this.setState({\r\n          loading: false,\r\n          loadProfileMessage: \"\",\r\n          firstName: userProfile.fullName.split(\" \")[0],\r\n          lastName: userProfile.fullName.split(\" \")[1],\r\n          email: userProfile.email,\r\n          phone: userProfile.phoneNumber,\r\n          birthday: birthday,\r\n          imageUrl: userProfile.imageUrl,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          loadProfileMessage: res.exception.errorMsg,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  onImageUpload = (event) => {\r\n    console.log(\"onImageupload called\");\r\n    const imageObj = event.target.files[0];\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"profilePhoto\", imageObj);\r\n\r\n    uploadImage(formData).then((res) => {\r\n      if (res.status === 200) {\r\n        const imageUrl = res.response.imageUrl;\r\n        this.setState({\r\n          imageUploadErrorMessage: \"\",\r\n          imageUrl,\r\n        });\r\n      } else\r\n        this.setState({\r\n          imageUploadErrorMessage: res.exception.errorMsg,\r\n        });\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n  //   validatePhone = (event) => {\r\n  //     const phone = event.target.value;\r\n  //     console.log(phone.length)  //15 for india\r\n  //   };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setPhone = (event) => {\r\n    const phone = event.target.value;\r\n    this.setState({\r\n      phone,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n    } = this.state;\r\n    if (fnameIsValid === true && lnameIsValid === true) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      let userInfo = {\r\n        fullName: `${firstName} ${lastName}`,\r\n        email,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n        imageUrl,\r\n      };\r\n      updateProfile(userInfo).then((res) => {\r\n        if (res.status === 200)\r\n          this.setState({\r\n            infoMessage: \"Profile Updated Successfully\",\r\n            loading: false,\r\n          });\r\n        else\r\n          this.setState({\r\n            infoMessage: res.exception.errorMsg,\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n      infoMessage,\r\n      imageUploadErrorMessage,\r\n      loadProfileMessage,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n      {loading && <Loader />}\r\n        <Container className={classes.imageContainer}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            {imageUploadErrorMessage !== \"\" && (\r\n              <Typography\r\n                style={{ marginTop: 5, marginBottom: 5 }}\r\n                className={classes.failedMessageColor}\r\n              >\r\n                {imageUploadErrorMessage}\r\n              </Typography>\r\n            )}\r\n\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={this.onImageUpload}\r\n            />\r\n            {imageUrl === null ? (\r\n              <div\r\n                style={{ position: \"relative\", width: 100, marginBottom: 20 }}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  size=\"7x\"\r\n                  className={classes.userIcon}\r\n                />\r\n\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.cameraIcon}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n              </div>\r\n            ) : (\r\n                <div style={{ position: \"relative\", width: 110, height: 110, marginBottom: 10 }}>\r\n                  <img\r\n                    src={userProfilePhoto + imageUrl}\r\n                    alt=\"profile image\"\r\n                    className={classes.profileImg}\r\n                  />\r\n\r\n                  <label htmlFor=\"icon-button-file\">\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      className={classes.cameraIcon}\r\n                      component=\"span\"\r\n                    >\r\n                      <PhotoCamera />\r\n                    </IconButton>\r\n                  </label>\r\n                </div>\r\n              )}\r\n          </div>\r\n\r\n          <Typography variant=\"h5\" style={{ color: \"white\", marginRight: 20 }}>\r\n            Welcome {firstName}! 😊\r\n          </Typography>\r\n        </Container>\r\n        <Container\r\n          className={classes.cardStyle}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <Grid container justify=\"center\">\r\n            <div className={classes.paper}>\r\n              {loadProfileMessage !== \"\" && (\r\n                <Typography className={classes.failedMessageColor}>\r\n                  {loadProfileMessage}\r\n                </Typography>\r\n              )}\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                My Profile\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      value={firstName}\r\n                      error={fnameIsValid ? false : true}\r\n                      helperText={\r\n                        fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                      }\r\n                      onChange={this.validateName}\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      value={lastName}\r\n                      autoComplete=\"lname\"\r\n                      error={lnameIsValid ? false : true}\r\n                      helperText={\r\n                        lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                      }\r\n                      onChange={this.validateName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MuiPhoneNumber\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"phone\"\r\n                      label=\"Mobile Number\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      defaultCountry={\"in\"}\r\n                      autoComplete=\"phone\"\r\n                      onBlur={this.setPhone}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"date\"\r\n                      label=\"Birthday\"\r\n                      name=\"date\"\r\n                      value={birthday}\r\n                      type=\"date\"\r\n                      autoComplete=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={this.setBirthday}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  Update Changes\r\n                </Button>\r\n\r\n                <Grid container justify=\"flex-start\">\r\n                  <Grid item>\r\n                    <Typography\r\n                      className={\r\n                        infoMessage.includes(\"Successfully\")\r\n                          ? classes.successMessageColor\r\n                          : classes.failedMessageColor\r\n                      }\r\n                    >\r\n                      {infoMessage}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/\">Proceed to home</Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Profile);\r\n","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js",["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":15,"column":9,"nodeType":"111","messageId":"112","endLine":15,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":19,"column":30,"nodeType":"111","messageId":"112","endLine":19,"endColumn":45},{"ruleId":"109","severity":1,"message":"114","line":19,"column":47,"nodeType":"111","messageId":"112","endLine":19,"endColumn":66},{"ruleId":"115","severity":1,"message":"116","line":320,"column":19,"nodeType":"117","endLine":324,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":8,"column":22,"nodeType":"111","messageId":"112","endLine":8,"endColumn":37},{"ruleId":"109","severity":1,"message":"114","line":8,"column":39,"nodeType":"111","messageId":"112","endLine":8,"endColumn":58},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'buttonAvailable' is defined but never used.","'buttonAvailableText' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]