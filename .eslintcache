[{"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js":"2","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js":"3","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js":"4","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js":"5","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js":"6","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js":"7","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js":"8","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js":"9","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js":"10","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\screen\\Screen.js":"11","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\screen.js":"12","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\loading.js":"13","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js":"14","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js":"15","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js":"16","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"17","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"18","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js":"19","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"20","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js":"21","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js":"22","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js":"23","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js":"24","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js":"25","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"26","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js":"27","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"28","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\pageNotFound\\PageNotFound.js":"29","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js":"30","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js":"31","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"32","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js":"33","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js":"34","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"35","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js":"36","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\screen.js":"37","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"38","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\error\\Error.js":"39","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"40","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"41","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\Purchase.js":"42","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"43","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\Loader.js":"44","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"45","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js":"46"},{"size":1130,"mtime":1607940912327,"results":"47","hashOfConfig":"48"},{"size":2677,"mtime":1608299829607,"results":"49","hashOfConfig":"48"},{"size":156,"mtime":1606720032227,"results":"50","hashOfConfig":"48"},{"size":653,"mtime":1607610469454,"results":"51","hashOfConfig":"48"},{"size":946,"mtime":1607669275726,"results":"52","hashOfConfig":"48"},{"size":1004,"mtime":1607691997726,"results":"53","hashOfConfig":"48"},{"size":347,"mtime":1607955968359,"results":"54","hashOfConfig":"48"},{"size":6742,"mtime":1608294988962,"results":"55","hashOfConfig":"48"},{"size":297,"mtime":1606720032275,"results":"56","hashOfConfig":"48"},{"size":9432,"mtime":1608295070118,"results":"57","hashOfConfig":"48"},{"size":11685,"mtime":1608197518608,"results":"58","hashOfConfig":"48"},{"size":242,"mtime":1607610469320,"results":"59","hashOfConfig":"48"},{"size":200,"mtime":1607543423875,"results":"60","hashOfConfig":"48"},{"size":1954,"mtime":1608293624057,"results":"61","hashOfConfig":"48"},{"size":2009,"mtime":1608020140356,"results":"62","hashOfConfig":"48"},{"size":1106,"mtime":1608287657895,"results":"63","hashOfConfig":"48"},{"size":2024,"mtime":1608293624071,"results":"64","hashOfConfig":"48"},{"size":6016,"mtime":1608099901924,"results":"65","hashOfConfig":"48"},{"size":140,"mtime":1607544076655,"results":"66","hashOfConfig":"48"},{"size":2842,"mtime":1608293624060,"results":"67","hashOfConfig":"48"},{"size":3351,"mtime":1607713115392,"results":"68","hashOfConfig":"48"},{"size":7142,"mtime":1608299838698,"results":"69","hashOfConfig":"48"},{"size":10234,"mtime":1608295413790,"results":"70","hashOfConfig":"48"},{"size":9953,"mtime":1608295048946,"results":"71","hashOfConfig":"48"},{"size":14239,"mtime":1608294841701,"results":"72","hashOfConfig":"48"},{"size":3110,"mtime":1608270335072,"results":"73","hashOfConfig":"48"},{"size":2319,"mtime":1608098680575,"results":"74","hashOfConfig":"48"},{"size":4082,"mtime":1608293624068,"results":"75","hashOfConfig":"48"},{"size":2481,"mtime":1608113670339,"results":"76","hashOfConfig":"48"},{"size":247,"mtime":1607610469320,"results":"77","hashOfConfig":"48"},{"size":242,"mtime":1607584538147,"results":"78","hashOfConfig":"48"},{"size":241,"mtime":1607497903909,"results":"79","hashOfConfig":"48"},{"size":226,"mtime":1606900214204,"results":"80","hashOfConfig":"48"},{"size":1857,"mtime":1607929926560,"results":"81","hashOfConfig":"48"},{"size":3468,"mtime":1607691997724,"results":"82","hashOfConfig":"48"},{"size":627,"mtime":1606900214201,"results":"83","hashOfConfig":"48"},{"size":179,"mtime":1607610469317,"results":"84","hashOfConfig":"48"},{"size":8345,"mtime":1608293624065,"results":"85","hashOfConfig":"48"},{"size":908,"mtime":1607610469313,"results":"86","hashOfConfig":"48"},{"size":7915,"mtime":1608293624066,"results":"87","hashOfConfig":"48"},{"size":5413,"mtime":1608293624081,"results":"88","hashOfConfig":"48"},{"size":6716,"mtime":1608293624072,"results":"89","hashOfConfig":"48"},{"size":231,"mtime":1607610469319,"results":"90","hashOfConfig":"48"},{"size":1259,"mtime":1607775420598,"results":"91","hashOfConfig":"48"},{"size":2053,"mtime":1608293624062,"results":"92","hashOfConfig":"48"},{"size":209,"mtime":1608020597106,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1m7sr9s",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js",[],["194","195"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js",["196"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js",["197"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\screen\\Screen.js",["198","199"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from 'recompose/compose';\r\nimport { CardContent, Typography, IconButton, Button, Tooltip } from '@material-ui/core';\r\nimport { ArrowBackIosRounded } from '@material-ui/icons'\r\nimport { headerText, buttonAvailable, buttonAvailableText } from '../../theme'\r\nimport { setSeatsAndPrice } from '../../store/actions/shared'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport Loader from '../../shared-components/Loader'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: '98%',\r\n        borderBottom: 'none',\r\n        borderTop: 'none',\r\n        overFlow: 'auto',\r\n    },\r\n\r\n})\r\n\r\nclass Screen extends Component {\r\n    state = {\r\n        selectedSeats: [],\r\n        price: 0,\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {seatsAndPrice} = this.props;\r\n        if(seatsAndPrice.selectedSeats !== undefined && seatsAndPrice.price !==undefined) {\r\n            this.setState({\r\n                selectedSeats: seatsAndPrice.selectedSeats,\r\n                price: seatsAndPrice.price\r\n            })\r\n        }\r\n    }\r\n\r\n    calculatePrice(theater, selectedSeats) {\r\n        let price = 0;\r\n        selectedSeats.forEach(seat => {\r\n            if (seat.charAt(0) === \"G\") {\r\n                price = price + theater.priceOfDifferentSeatType.GOLD;\r\n            }\r\n            else if (seat.charAt(0) === \"P\") {\r\n                price = price + theater.priceOfDifferentSeatType.PLATINUM;\r\n            }\r\n            else if (seat.charAt(0) === \"D\") {\r\n                price = price + theater.priceOfDifferentSeatType.DIAMOND;\r\n            }\r\n        })\r\n        return price;\r\n    }\r\n\r\n    selectSeat = (seat) => {\r\n        this.setState(currentState => {\r\n            let selectedSeats = []\r\n            let price = 0\r\n            if (currentState.selectedSeats.includes(seat)) {\r\n                selectedSeats = currentState.selectedSeats.filter(seatValue => seatValue !== seat)\r\n                price = this.calculatePrice(this.props.selectedScreen, selectedSeats)\r\n            }\r\n            else {\r\n                selectedSeats = currentState.selectedSeats.concat(seat)\r\n                price = this.calculatePrice(this.props.selectedScreen, selectedSeats)\r\n            }\r\n            return {\r\n                selectedSeats: selectedSeats,\r\n                price: price\r\n            }\r\n        })\r\n    }\r\n\r\n    purchaseSeats = () => {\r\n        /*Redirect to payment page and store state information in redux store*/\r\n        this.props.dispatch(setSeatsAndPrice(this.state.selectedSeats, this.props.seatPlan.response.seatPlanId, this.state.price))\r\n        this.setState({\r\n            redirect: true\r\n        })\r\n    }\r\n\r\n    createSeatMap = (selectedScreen) => {\r\n        let seatMap = [];\r\n        Object.keys(selectedScreen.noOfRowsPerSeatType).forEach(seatType => {\r\n            let seatTypeMap = [];\r\n            Array.from(Array(selectedScreen.noOfRowsPerSeatType[seatType]).keys()).forEach(\r\n                (row) => {\r\n                    let seatRow = [];\r\n                    Array.from(Array(selectedScreen.columns).keys()).forEach(\r\n                        (col) => {\r\n                            seatRow.push(seatType.charAt(0) + 'R' + (row + 1) + 'C' + + (col + 1))\r\n                        }\r\n                    )\r\n                    seatTypeMap.push(seatRow);\r\n                }\r\n            )\r\n            seatMap.push(seatTypeMap)\r\n        })\r\n\r\n        return seatMap;\r\n    }\r\n\r\n    render() {\r\n        const { seatPlan, selectedScreen, selectedTheater, selectedMovie, classes } = this.props\r\n\r\n        const seatMap = Object.keys(selectedMovie).length === 0 ? [] : this.createSeatMap(selectedScreen)\r\n        return (\r\n            Object.keys(selectedMovie).length === 0 ? <Redirect to=\"/\" /> :\r\n                this.state.redirect ? (<Redirect to={{ pathname: '/purchase' }} />) : (\r\n                    <div style={{ minHeight: '100vh', width: '100%', margin: 0, padding: 0 }}>\r\n                        <div className='screen-header'>\r\n                            <IconButton >\r\n                                <Link style={{ textDecoration: 'none' }} to={{\r\n                                    pathname: \"/movie\",\r\n                                }}><ArrowBackIosRounded style={{ color: headerText }} /></Link>\r\n                            </IconButton>\r\n                            <span>{selectedMovie.name}</span>\r\n\r\n                            <span style={{ color: 'darkgrey', marginLeft: '10px', fontSize: '0.75em' }}>\r\n                                {selectedTheater.theaterName + \" \" + selectedTheater.address.city}</span>\r\n                            <div className='screen-info'>\r\n                                <div className='info'>\r\n                                    <div className='seat' style={{ fontSize: '0.7em', backgroundColor: 'white', cursor: 'default' }}>Available Seats</div>\r\n                                    <div className='seat chosen' style={{ fontSize: '0.7em', cursor: 'default' }}>Selected Seats</div>\r\n                                    <Tooltip title=\"Other users have booked this seat\" aria-label=\"add\">\r\n                                        <div className='seat booked' style={{ fontSize: '0.7em' }}>Booked Seats</div>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Other users have locked these seats but payment is yet to be made\" aria-label=\"add\">\r\n                                        <div className='seat locked' style={{ fontSize: '0.7em' }}>Locked Seats</div>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='seat-container'>\r\n                            {Object.keys(seatPlan).length === 0 ?\r\n                                <Loader />\r\n                                : (seatPlan.exception === null ? (<Card className={classes.root} variant=\"outlined\">\r\n                                    {Object.keys(selectedScreen.noOfRowsPerSeatType).map((seatType, index) => (\r\n                                        <CardContent key={seatType}>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {seatType + ' - Rs. ' + selectedScreen.priceOfDifferentSeatType[seatType]}\r\n                                            </Typography>\r\n                                            <div className='seat-map'>\r\n                                                {seatMap[index].map((row, rowindex) => (\r\n                                                    <div className='seat-row' key={row}>\r\n                                                        {seatMap[index][rowindex].map(\r\n                                                            (col, colIndex) => (\r\n                                                                (seatPlan.response.bookedSeats !== undefined && seatPlan.response.bookedSeats.includes(seatMap[index][rowindex][colIndex]) ?\r\n                                                                    <Tooltip title=\"Other user booked this seat\" aria-label=\"add\">\r\n                                                                        <div className='seat booked' key={seatMap[index][rowindex][colIndex]}>\r\n                                                                            {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                                        </div>\r\n                                                                    </Tooltip>\r\n                                                                    : (this.state.selectedSeats.includes(seatMap[index][rowindex][colIndex]) ?\r\n                                                                        <div className='seat chosen' key={seatMap[index][rowindex][colIndex]}\r\n                                                                            onClick={() => this.selectSeat(seatMap[index][rowindex][colIndex])}\r\n                                                                        >\r\n                                                                            {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                                        </div>\r\n                                                                        : (seatPlan.response.lockedSeats !== undefined && seatPlan.response.lockedSeats.includes(seatMap[index][rowindex][colIndex]) ?\r\n                                                                            <Tooltip title=\"Other user has locked this seat but payment is yet to be made\" aria-label=\"add\">\r\n                                                                                <div className='seat locked' key={seatMap[index][rowindex][colIndex]}\r\n                                                                                >\r\n                                                                                    {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                                                </div></Tooltip>\r\n                                                                            : <Tooltip title=\"Click to select this seat\" aria-label=\"add\">\r\n                                                                                <div className='seat' key={seatMap[index][rowindex][colIndex]}\r\n                                                                                    onClick={() => this.selectSeat(seatMap[index][rowindex][colIndex])}\r\n                                                                                >\r\n                                                                                    {seatMap[index][rowindex][colIndex].split('C')[1]}\r\n                                                                                </div></Tooltip>))\r\n\r\n                                                                )))}\r\n                                                    </div>))}\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    ))}\r\n                                    <div style={{ margin: 10, display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                        <Button className='timebutton' disabled={this.state.selectedSeats.length === 0}\r\n                                            onClick={this.purchaseSeats}\r\n                                            variant='outlined'\r\n                                        >\r\n                                            Purchase - Rs {this.state.price}</Button>\r\n                                    </div>\r\n                                </Card>\r\n                                ) : <Redirect to={{\r\n                                    pathname: '/error',\r\n                                    state: {\r\n                                        exception: seatPlan.exception\r\n                                    }\r\n                                }} />)}\r\n                        </div >\r\n                    </div>)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ selectedScreen, selectedTheater, seatPlan, selectedMovie, seatsAndPrice }) => {\r\n    return { selectedScreen, seatPlan, selectedTheater, selectedMovie, seatsAndPrice }\r\n}\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(Screen)",["200","201"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\screen.js",[],["202","203"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\loading.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js",[],["204","205"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js",["206"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js",["207"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",["208"],"import React, { Component } from 'react'\r\nimport BookingHistory from './bookingHistory/BookingHistory'\r\nimport Header from '../../shared-components/header/Header'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {Tabs, Tab, Typography} from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {getAllBookings, cancelBooking} from '../../utils/api'\r\nimport { header, headerText} from '../../theme'\r\nimport Footer from '../../shared-components/footer/Footer'\r\n\r\nexport default class MyBookings extends Component {\r\n    state = {\r\n        value: 0,\r\n        upcomingBookings: [],\r\n        previousBookings: [],\r\n        exception: null,\r\n        cancel: false,\r\n        open: false\r\n    }\r\n    cancelTicket = (bookingId) => {\r\n        cancelBooking(bookingId).then((response) => {\r\n            if(response.exception === null) {\r\n                this.setState((previousState) => {\r\n                    return {\r\n                    ...previousState,\r\n                    upcomingBookings: previousState.upcomingBookings\r\n                        .filter((booking)=> booking.bookingId !== response.response.bookingId).concat([response.response])\r\n                    };\r\n            })\r\n            } else {\r\n                this.setState({\r\n                    exception: response.exception\r\n            })\r\n        }\r\n        })\r\n        \r\n    }\r\n\r\n    handleClose = (cancel, bookingId) => {\r\n        if (cancel) {\r\n            this.cancelTicket(bookingId)\r\n        }\r\n        this.setState({\r\n            open: false,\r\n            cancel\r\n        })\r\n    };\r\n\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        getAllBookings()\r\n        .then(response => {\r\n            if(response.exception === null) {\r\n                const previous = response.response.filter(ticket => ticket.dateOfShow.split('T')[0] < new Date().toISOString().split('T')[0]);\r\n                const upcoming = response.response.filter(ticket => ticket.dateOfShow.split('T')[0] > new Date().toISOString().split('T')[0]);\r\n                this.setState({\r\n                    previousBookings: previous,\r\n                    upcomingBookings: upcoming\r\n                    })\r\n            }\r\n        else{\r\n            this.setState({\r\n                exception: response.exception\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    \r\n    \r\n    render() {\r\n        const {value, exception} = this.state;\r\n        return (\r\n            (exception === null ?\r\n        (<React.Fragment>\r\n            <Header/>\r\n                <AppBar position=\"static\" style={{backgroundColor: headerText, color: header}}>\r\n                    <Tabs value={value} onChange={this.handleChange} \r\n                            TabIndicatorProps={{\r\n                                style: {\r\n                                  backgroundColor: header}\r\n                              }}\r\n                            fullwidth=\"true\"\r\n                            aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Upcoming Bookings\" id=\"upcomingBookingsTabPanel\"\r\n                                aria-controls=\"upcomingBookingsTabPanel\"/>\r\n                        <Tab label=\"Previous Bookings\" id=\"bookingHistoryTabPanel\"\r\n                                aria-controls=\"bookingHistoryTabPanel\"/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                    {value===0 && <BookingHistory bookings={this.state.upcomingBookings} \r\n                                                open={this.state.open} handleClose={this.handleClose}\r\n                                                handleClickOpen={this.handleClickOpen}/>}\r\n                    {value===1 && <BookingHistory bookings={this.state.previousBookings}/>}\r\n                <Footer />\r\n        </React.Fragment>) \r\n        : <Redirect to={{pathname:'/error',\r\n\t\t\t\t\t\t\t\tstate:{\r\n\t\t\t\t\t\t\t\t\texception:exception\r\n\t\t\t\t\t\t\t\t}}} /> )\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\pageNotFound\\PageNotFound.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js",["209"],"import { setSelectedCity } from './city';\r\nimport { getAllMovies, setSelectedMovie } from './movie';\r\nimport { getMovies, getTheaters, getSeatPlan, lockSeats } from '../../utils/api';\r\nimport { getAllTheaters, setSeatPlan, setSelectedTheater, setShowTimings } from './theater';\r\nimport { setSelectedScreen } from './screen';\r\n\r\nexport const SET_SEATS_AND_PRICE = 'SET_SEATS_AND_PRICE'\r\n\r\nexport function setCityAndMoviesList(city) {\r\n    return (dispatch) => {\r\n        //dispatch selected city to store\r\n        dispatch(setSelectedCity(city));\r\n        //api call to fetch all movies in the selected city and dispatch the moviesList to store\r\n        getMovies(city.id)\r\n            .then(moviesList => dispatch(getAllMovies(moviesList)))\r\n    }\r\n}\r\n\r\nexport function setMovieAndTheaterList(movie, setMovie = true) {\r\n    return (dispatch, getState) => {\r\n        const { selectedCity } = getState();\r\n        if (setMovie) {\r\n            dispatch(setSelectedMovie(movie));\r\n        }\r\n        getTheaters(selectedCity.id, movie.movieId)\r\n            .then(theatersList => dispatch(getAllTheaters(theatersList)))\r\n    }\r\n}\r\n\r\nexport function setTheaterAndSeatPlan(theater, seatPlanId, screen) {\r\n    return (dispatch) => {\r\n        dispatch(setSelectedTheater(theater));\r\n\r\n        dispatch(setSelectedScreen(screen));\r\n\r\n        getSeatPlan(seatPlanId)\r\n            .then(seatPlan => dispatch(setSeatPlan(seatPlan)))\r\n    }\r\n}\r\n\r\nfunction lockSeatsAndPrice(selectedSeats, price) {\r\n    return {\r\n        type: SET_SEATS_AND_PRICE,\r\n        selectedSeats,\r\n        price\r\n    }\r\n}\r\n\r\nexport function setSeatsAndPrice(selectedSeats, seatPlanId, price) {\r\n    return (dispatch) => {\r\n        lockSeats(seatPlanId, selectedSeats).then(response => response ?\r\n            dispatch(lockSeatsAndPrice(selectedSeats, price)) : console.error('error'))\r\n    }\r\n}\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\screen.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\error\\Error.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\Purchase.js",["210"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Ticket from '../../shared-components/ticket/Ticket'\r\nimport PaymentForm from './payment-form/PaymentForm'\r\nimport { ArrowBackIosRounded } from '@material-ui/icons'\r\nimport { headerText, header } from '../../theme'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { purchaseTickets } from '../../utils/api'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loader from \"../../shared-components/Loader\"\r\nimport Footer from '../../shared-components/footer/Footer'\r\n\r\nclass Purchase extends Component {\r\n\r\n    state = {\r\n        bookingStatus: '',\r\n        exception: null,\r\n        open: false,\r\n        loading: false\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            exception: null\r\n        })\r\n    };\r\n\r\n    purchaseTicket = (event) => {\r\n        event.preventDefault()\r\n\r\n        const { selectedTheater, seatsAndPrice, selectedMovie, selectedScreen, seatPlan } = this.props\r\n        const { loading } = this.state\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        purchaseTickets({\r\n            theaterDetails: selectedTheater.theaterName + \" \" + selectedTheater.address.city,\r\n            screenName: selectedScreen.screenName,\r\n            selectedSeats: seatsAndPrice.selectedSeats,\r\n            price: seatsAndPrice.price,\r\n            movieName: selectedMovie.name,\r\n            time: this.getDateAndTime(seatPlan, selectedScreen).time,\r\n            date: this.getDateAndTime(seatPlan, selectedScreen).date,\r\n            seatPlanId: seatPlan.response.seatPlanId\r\n        }).then(\r\n            response => {\r\n                if (response.response !== null && response.response.bookingStatus === 'BOOKED') {\r\n                    this.setState({\r\n                        bookingStatus: 'BOOKED'\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        exception: response.exception,\r\n                        open: true\r\n                    })\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    getDateAndTime = (seatPlan, selectedScreen) => {\r\n\r\n        let time, date\r\n\r\n        selectedScreen.screenTimes.forEach(screenTime => {\r\n            const selectedDate = screenTime.showDateList.filter(showDate => showDate.seatPlanId === seatPlan.response.seatPlanId)\r\n            if (selectedDate.length !== 0) {\r\n                time = screenTime.showTiming\r\n                date = selectedDate[0].moviePlayingDate.split('T')[0]\r\n            }\r\n        })\r\n\r\n        return { time, date }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { selectedTheater, seatsAndPrice, selectedMovie, selectedScreen, seatPlan } = this.props\r\n        const { exception, loading } = this.state;\r\n        return (\r\n            <div style={{ minHeight: '100vh', width: '100%', margin: 0, padding: 0 }}>\r\n                {loading && <Loader />}\r\n                <div className='screen-header'>\r\n                    <IconButton ><Link style={{ textDecoration: 'none' }} to={{\r\n                        pathname: \"/screen\",\r\n                    }}><ArrowBackIosRounded style={{ color: this.state.bookingStatus === \"\" ? headerText : header }} /></Link>\r\n                    </IconButton>\r\n                    <span>{selectedMovie.name}</span>\r\n                    <span style={{ color: 'darkgrey', marginLeft: '10px', fontSize: '0.75em' }}>\r\n                        {selectedTheater.theaterName + \" \" + selectedTheater.address.city}</span>\r\n                    <div className='screen-info'>\r\n                        <div className='info' style={{ fontSize: '1.2em', fontWeight: 500 }}>\r\n                            Purchase tickets\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='purchase-container'>\r\n                    <PaymentForm purchaseTicket={this.purchaseTicket} bookingStatus={this.state.bookingStatus} />\r\n                    <Ticket\r\n                        theater={{\r\n                            \"screenName\": selectedScreen.screenName,\r\n                            \"theaterDetails\": selectedTheater.theaterName + \" \" + selectedTheater.address.city,\r\n                        }}\r\n                        selectedSeats={seatsAndPrice.selectedSeats === undefined ? [] : seatsAndPrice.selectedSeats}\r\n                        price={seatsAndPrice.price}\r\n                        movie={{\r\n                            \"name\": selectedMovie.name,\r\n                            \"genre\": selectedMovie.genre,\r\n                        }}\r\n                        time={this.getDateAndTime(seatPlan, selectedScreen).time}\r\n                        date={this.getDateAndTime(seatPlan, selectedScreen).date}\r\n                        bookingStatus={this.state.bookingStatus}\r\n                    />\r\n                </div>\r\n                {\r\n                    (exception !== null && <Dialog\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{`Payment failed`}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                {`Payment Failed with the message ${exception.errorMsg} and code ${exception.code}. Please try again.`}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={() => this.handleClose()} autoFocus>\r\n                                OK\r\n                                </Button>\r\n                        </DialogActions>\r\n                    </Dialog>)\r\n                }\r\n                <Footer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ selectedTheater, seatsAndPrice, selectedMovie, selectedScreen, seatPlan }) => {\r\n    return { selectedTheater, seatsAndPrice, selectedMovie, selectedScreen, seatPlan }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Purchase)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\Loader.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":11},{"ruleId":"215","severity":1,"message":"216","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":11},{"ruleId":"215","severity":1,"message":"219","line":8,"column":22,"nodeType":"217","messageId":"218","endLine":8,"endColumn":37},{"ruleId":"215","severity":1,"message":"220","line":8,"column":39,"nodeType":"217","messageId":"218","endLine":8,"endColumn":58},{"ruleId":"211","replacedBy":"221"},{"ruleId":"213","replacedBy":"222"},{"ruleId":"211","replacedBy":"223"},{"ruleId":"213","replacedBy":"224"},{"ruleId":"211","replacedBy":"225"},{"ruleId":"213","replacedBy":"226"},{"ruleId":"215","severity":1,"message":"227","line":150,"column":7,"nodeType":"217","messageId":"218","endLine":150,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":321,"column":19,"nodeType":"230","endLine":325,"endColumn":21},{"ruleId":"215","severity":1,"message":"231","line":5,"column":20,"nodeType":"217","messageId":"218","endLine":5,"endColumn":30},{"ruleId":"215","severity":1,"message":"232","line":4,"column":59,"nodeType":"217","messageId":"218","endLine":4,"endColumn":73},{"ruleId":"215","severity":1,"message":"233","line":39,"column":17,"nodeType":"217","messageId":"218","endLine":39,"endColumn":24},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'buttonAvailable' is defined but never used.","'buttonAvailableText' is defined but never used.",["234"],["235"],["234"],["235"],["234"],["235"],"'phoneErrorMsg' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Typography' is defined but never used.","'setShowTimings' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]