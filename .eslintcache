[{"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"1","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"2","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\index.js":"3","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\Purchase.js":"4","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js":"5","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"6","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"7","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"8","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"9","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\header\\Header.js":"10","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\config\\apiConfig.js":"11","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js":"12","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\shared.js":"13","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"14","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"15","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"16","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"17","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\Home.js":"18","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js":"19","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"20","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\index.js":"21","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\City.js":"22","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theater.js":"23","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\movie.js":"24","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js":"25","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js":"26","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\index.js":"27","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"28","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\theater.js":"29","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js":"30","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\movie.js":"31","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\profile\\Profile.js":"32","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js":"33","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\authedUser.js":"34","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\screen.js":"35","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js":"36","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signin\\SignIn.js":"37","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\seatPlan.js":"38","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\city.js":"39","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"40","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\error\\Error.js":"41"},{"size":3961,"mtime":1607598531743,"results":"42","hashOfConfig":"43"},{"size":1858,"mtime":1607513742072,"results":"44","hashOfConfig":"43"},{"size":806,"mtime":1607581725279,"results":"45","hashOfConfig":"43"},{"size":6234,"mtime":1607597061051,"results":"46","hashOfConfig":"43"},{"size":5612,"mtime":1607599608351,"results":"47","hashOfConfig":"43"},{"size":5676,"mtime":1607593537342,"results":"48","hashOfConfig":"43"},{"size":8883,"mtime":1607594334578,"results":"49","hashOfConfig":"43"},{"size":3374,"mtime":1607592020258,"results":"50","hashOfConfig":"43"},{"size":4130,"mtime":1607527404751,"results":"51","hashOfConfig":"43"},{"size":8852,"mtime":1607590925357,"results":"52","hashOfConfig":"43"},{"size":1764,"mtime":1607526987024,"results":"53","hashOfConfig":"43"},{"size":1616,"mtime":1607587431578,"results":"54","hashOfConfig":"43"},{"size":1906,"mtime":1607526986989,"results":"55","hashOfConfig":"43"},{"size":1901,"mtime":1607587487151,"results":"56","hashOfConfig":"43"},{"size":231,"mtime":1607585318011,"results":"57","hashOfConfig":"43"},{"size":241,"mtime":1607430230143,"results":"58","hashOfConfig":"43"},{"size":1093,"mtime":1607589801615,"results":"59","hashOfConfig":"43"},{"size":2111,"mtime":1607585132724,"results":"60","hashOfConfig":"43"},{"size":11407,"mtime":1607595223503,"results":"61","hashOfConfig":"43"},{"size":6010,"mtime":1607580091863,"results":"62","hashOfConfig":"43"},{"size":608,"mtime":1607526986991,"results":"63","hashOfConfig":"43"},{"size":1414,"mtime":1607517854948,"results":"64","hashOfConfig":"43"},{"size":247,"mtime":1606827485396,"results":"65","hashOfConfig":"43"},{"size":237,"mtime":1606803965986,"results":"66","hashOfConfig":"43"},{"size":819,"mtime":1607591544532,"results":"67","hashOfConfig":"43"},{"size":297,"mtime":1606720415312,"results":"68","hashOfConfig":"43"},{"size":156,"mtime":1606720415312,"results":"69","hashOfConfig":"43"},{"size":3416,"mtime":1607580091858,"results":"70","hashOfConfig":"43"},{"size":627,"mtime":1606884581373,"results":"71","hashOfConfig":"43"},{"size":11211,"mtime":1607526986985,"results":"72","hashOfConfig":"43"},{"size":394,"mtime":1606735649432,"results":"73","hashOfConfig":"43"},{"size":13780,"mtime":1607526986980,"results":"74","hashOfConfig":"43"},{"size":8388,"mtime":1607526986984,"results":"75","hashOfConfig":"43"},{"size":243,"mtime":1607526986990,"results":"76","hashOfConfig":"43"},{"size":179,"mtime":1607526986987,"results":"77","hashOfConfig":"43"},{"size":3291,"mtime":1607526986984,"results":"78","hashOfConfig":"43"},{"size":4577,"mtime":1607526986983,"results":"79","hashOfConfig":"43"},{"size":226,"mtime":1606884634619,"results":"80","hashOfConfig":"43"},{"size":259,"mtime":1606727834647,"results":"81","hashOfConfig":"43"},{"size":2744,"mtime":1607247411933,"results":"82","hashOfConfig":"43"},{"size":908,"mtime":1607591429284,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7vr4j6",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"143"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],["175","176"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\index.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\Purchase.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\utils\\api.js",["177","178","179"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",["180"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],["181","182"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\header\\Header.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\App.js",["183","184","185","186"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\shared.js",["187","188","189","190"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],["191","192"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["193"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Carousel from 'react-material-ui-carousel'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    minWidth: 100\r\n  },\r\n});\r\n\r\nexport default function MovieCarousel(props) {\r\n  const classes = useStyles();\r\n  const {moviesList, handleSelectedMovie} = props;\r\n\r\n  return (\r\n        <div style={{width:'60%',margin: 'auto',padding:15}}>\r\n            <Carousel style={{flex:1, height:'250px'}} fullHeightHover={false} autoPlay={false} navButtonsAlwaysVisible={true}>\r\n            {moviesList.map((movie, index) => \r\n            <div key={movie.movieId}>\r\n                {index %2===0 ? <img src='/logo192.png' width={'100%'} onClick={() =>handleSelectedMovie(movie)}\r\n                                      alt={`${movie.name} Poster`}/>\r\n                : <img src='/moviePoster.jpg' width={'100%'} onClick={() =>handleSelectedMovie(movie)}\r\n                        alt={`${movie.name} Poster`}/> }\r\n            </div>\r\n            )}\r\n            </Carousel>\r\n        </div>\r\n      )\r\n}","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\screen\\Screen.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\index.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\home\\City.js",[],["194","195"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\theater.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\middlewares\\index.js",[],["196","197"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js",["198"],"import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport { signup } from \"../../utils/api\";\r\nimport  Password  from \"./Password\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        MovieBooking\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    redirectToSignin: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    email: \"\",\r\n    // phoneIsValid:false,\r\n    birthday: \"\",\r\n    password: \"\",\r\n  //  confirmPassword: \"\",\r\n    passwordIsValid: true,\r\n    confirmPasswordIsValid: true,\r\n  };\r\n\r\n  passwordsAreValid = (password, passwordIsValid, confirmPasswordIsValid) =>{\r\n    this.setState({\r\n        password,\r\n        passwordIsValid,\r\n        confirmPasswordIsValid\r\n    })\r\n  }\r\n\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  //   validatePhone = (event) => {\r\n  //     const phone = event.target.value;\r\n  //     console.log(phone.length)  //15 for india\r\n  //   };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setEmail = (event) => {\r\n    const email = event.target.value;\r\n    this.setState({\r\n      email,\r\n    });\r\n  };\r\n\r\n  setPhone = (event) => {\r\n    const phone = event.target.value;\r\n    this.setState({\r\n      phone,\r\n    });\r\n  };\r\n//   validatePassword = (event) => {\r\n//     let pwd = event.target.value;\r\n//     if (\r\n//       !(\r\n//         pwd.length >= 6 &&\r\n//         (pwd.includes(\"@\") || pwd.includes(\"$\") || pwd.includes(\"#\"))\r\n//       )\r\n//     )\r\n//       this.setState({\r\n//         password: pwd,\r\n//         confirmPassword: \"\",\r\n//         passwordIsValid: false,\r\n//         confirmPasswordIsValid: true,\r\n//       });\r\n//     else\r\n//       this.setState({\r\n//         password: pwd,\r\n//         confirmPassword: \"\",\r\n//         passwordIsValid: true,\r\n//         confirmPasswordIsValid: true,\r\n//       });\r\n//   };\r\n\r\n//   validateConfirmPassword = (event) => {\r\n//     const cpwd = event.target.value;\r\n//     const { password } = this.state;\r\n//     if (cpwd !== password)\r\n//       this.setState({\r\n//         confirmPassword: cpwd,\r\n//         confirmPasswordIsValid: false,\r\n//       });\r\n//     else\r\n//       this.setState({\r\n//         confirmPassword: cpwd,\r\n//         confirmPasswordIsValid: true,\r\n//       });\r\n//   };\r\n\r\n//   clearConfirmPwd = () => {\r\n//     this.setState({\r\n//       confirmPassword: \"\",\r\n//     });\r\n//   };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      password,\r\n      passwordIsValid,\r\n      confirmPasswordIsValid,\r\n    } = this.state;\r\n    if (\r\n      fnameIsValid === true &&\r\n      lnameIsValid === true &&\r\n      passwordIsValid === true &&\r\n      confirmPasswordIsValid === true\r\n    ) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      let userInfo = {\r\n        email,\r\n        name: `${firstName} ${lastName}`,\r\n        password,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n      };\r\n      signup(userInfo).then((res) => {\r\n        if (res === \"success\")\r\n          this.setState({\r\n            redirectToLogin: true,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n    //   passwordIsValid,\r\n    //   confirmPasswordIsValid,\r\n    //   confirmPassword,\r\n      // password,\r\n      redirectToSignin,\r\n    } = this.state;\r\n\r\n    //if(redirectToSignin) return <Redirect to=\"/signin\" />\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  error={fnameIsValid ? false : true}\r\n                  helperText={\r\n                    fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                  }\r\n                  onBlur={this.validateName}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                  error={lnameIsValid ? false : true}\r\n                  helperText={\r\n                    lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                  }\r\n                  onBlur={this.validateName}\r\n                 \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onBlur={this.setEmail}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MuiPhoneNumber\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  defaultCountry={\"in\"}\r\n                  autoComplete=\"phone\"\r\n                  onBlur={this.setPhone}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"date\"\r\n                  label=\"Birthday\"\r\n                  name=\"date\"\r\n                  type=\"date\"\r\n                  autoComplete=\"date\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onBlur={this.setBirthday}\r\n                />\r\n              </Grid>\r\n              </Grid>\r\n              <Password passwordsAreValid={this.passwordsAreValid}/>\r\n             {/* <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  error={passwordIsValid ? false : true}\r\n                  helperText={\r\n                    passwordIsValid\r\n                      ? \"\"\r\n                      : \"Password should be min 6 characters long and must include atleast one special character (@, $, #)\"\r\n                  }\r\n                  onChange={this.validatePassword}\r\n                  //onFocus={this.clearConfirmPwd}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  autoComplete=\"current-password\"\r\n                  disabled={\r\n                    password === \"\" ? true : passwordIsValid ? false : true\r\n                  }\r\n                  error={confirmPasswordIsValid ? false : true}\r\n                  helperText={\r\n                    confirmPasswordIsValid\r\n                      ? \"\"\r\n                      : \"Password do not Match. Please check.\"\r\n                  }\r\n                  onChange={this.validateConfirmPassword}\r\n                />\r\n                </Grid> */}\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/signin\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SignUp);\r\n","C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\movie.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\profile\\Profile.js",["199","200","201","202"],"import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getProfile } from \"../../utils/api\";\r\nimport { uploadImage } from \"../../utils/api\";\r\nimport { updateProfile } from \"../../utils/api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { background } from \"../../theme\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        MovieBooking\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  profileInfoDiv: {\r\n    width: \"100vw\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"50px\",\r\n  },\r\n  cardStyle: {\r\n    minWidth: \"70vw\",\r\n    boxShadow: \"5px 10px 18px #888888\",\r\n    // backgroundColor: \"#2F363F\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  //   textFieldColor:{\r\n  //     backgroundColor: \"white\"\r\n  //   },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  profileImg: {\r\n    width: \"126px\",\r\n    height: \"126px\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    padding: \"2px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  userIcon: {\r\n    color: \"grey\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  successMessageColor: {\r\n    color: \"green\",\r\n  },\r\n  failedMessageColor: {\r\n    color: \"red\",\r\n  },\r\n  loadingPanel: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    zIndex: 100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    firstName: \"Anshul\",\r\n    lastName: \"Agarwal\",\r\n    phone: \"+91-7376487376\",\r\n    email: \"anshula128@gmail.com\",\r\n    birthday: \"1997-05-18\",\r\n    imageUrl: \"dffd\",\r\n    infoMessage: \"Successfully\",\r\n    imageUploadErrorMessage: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  //   componentDidMount() {\r\n  //     getProfile().then((userProfile) => {\r\n  //       if (userProfile.error === undefined) {\r\n  //         const birthday = this.formatDate(userProfile.dateOfBirth);\r\n  //         this.setState({\r\n  //           firstName: userProfile.fullName.split(\" \")[0],\r\n  //           lastName: userProfile.fullName.split(\" \")[1],\r\n  //           email: userProfile.email,\r\n  //           phone: userProfile.phoneNumber,\r\n  //           birthday,\r\n  //           imageUrl: userProfile.imageUrl,\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   }\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  onImageUpload = (event) => {\r\n    console.log(\"onImageupload called\");\r\n    const imageObj = event.target.files[0];\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"profilePhoto\", imageObj);\r\n\r\n    uploadImage(formData).then((resp) => {\r\n      if (resp.error === undefined) {\r\n        const imageUrl = resp.imageUrl;\r\n        this.setState({\r\n          imageUrl,\r\n        });\r\n      } else\r\n        this.setState({\r\n          imageUploadErrorMessage:\r\n            \"Some Error Occurred in uploading profile photo. Please retry.\",\r\n        });\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n  //   validatePhone = (event) => {\r\n  //     const phone = event.target.value;\r\n  //     console.log(phone.length)  //15 for india\r\n  //   };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setPhone = (event) => {\r\n    const phone = event.target.value;\r\n    this.setState({\r\n      phone,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n    } = this.state;\r\n    if (fnameIsValid === true && lnameIsValid === true) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      let userInfo = {\r\n        fullName: `${firstName} ${lastName}`,\r\n        email,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n        imageUrl,\r\n      };\r\n      updateProfile(userInfo).then((res) => {\r\n        if (res === \"success\")\r\n          this.setState({\r\n            infoMessage: \"Profile Updated Successfully\",\r\n            loading: false,\r\n          });\r\n        else\r\n          this.setState({\r\n            infoMessage: \"Some Error Occured. Could not update Profile\",\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n      infoMessage,\r\n      imageUploadErrorMessage,\r\n      loading,\r\n    } = this.state;\r\n\r\n    //if(redirectToSignin) return <Redirect to=\"/signin\" />\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        {/* <div className={classes.profileInfoDiv}></div> */}\r\n\r\n        <Grid container justify=\"center\">\r\n          <Card className={classes.cardStyle} variant=\"outlined\">\r\n            <CardContent>\r\n              <div className={classes.paper}>\r\n                {imageUrl === \"\" ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faUserCircle}\r\n                    size=\"9x\"\r\n                    className={classes.userIcon}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src=\"gorilla.jpg\"\r\n                    alt=\"profile image\"\r\n                    className={classes.profileImg}\r\n                  />\r\n                )}\r\n                {imageUploadErrorMessage !== \"\" && (\r\n                  <Typography className={classes.failedMessageColor}>\r\n                    {imageUploadErrorMessage}\r\n                  </Typography>\r\n                )}\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"icon-button-file\"\r\n                  type=\"file\"\r\n                  onChange={this.onImageUpload}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  My Profile\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"firstName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        value={firstName}\r\n                        error={fnameIsValid ? false : true}\r\n                        helperText={\r\n                          fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        value={lastName}\r\n                        autoComplete=\"lname\"\r\n                        error={lnameIsValid ? false : true}\r\n                        helperText={\r\n                          lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        type=\"email\"\r\n                        autoComplete=\"email\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <MuiPhoneNumber\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Mobile Number\"\r\n                        name=\"phone\"\r\n                        value={phone}\r\n                        defaultCountry={\"in\"}\r\n                        autoComplete=\"phone\"\r\n                        onBlur={this.setPhone}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"date\"\r\n                        label=\"Birthday\"\r\n                        name=\"date\"\r\n                        defaultValue={birthday}\r\n                        type=\"date\"\r\n                        autoComplete=\"date\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        onBlur={this.setBirthday}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {loading && (\r\n                    <Grid container spacing={5} justify=\"center\">\r\n                      <Grid item>\r\n                        <CircularProgress />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Update Changes\r\n                  </Button>\r\n                  <Grid container justify=\"flex-start\">\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={\r\n                          infoMessage.includes(\"Successfully\")\r\n                            ? classes.successMessageColor\r\n                            : classes.failedMessageColor\r\n                        }\r\n                      >\r\n                        {infoMessage}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Link href=\"/home\" variant=\"body2\">\r\n                        Proceed to home\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Profile);\r\n",["203","204"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\authedUser.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\screen.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\containers\\signin\\SignIn.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\reducers\\seatPlan.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\store\\actions\\city.js",["205"],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\Users\\shunm\\X-Corps_AWS_Workspace\\movie-booking-co\\src\\shared-components\\error\\Error.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":114,"column":7,"nodeType":"212","messageId":"213","endLine":114,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":161,"column":7,"nodeType":"212","messageId":"213","endLine":161,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":178,"column":7,"nodeType":"212","messageId":"213","endLine":178,"endColumn":13},{"ruleId":"210","severity":1,"message":"214","line":11,"column":8,"nodeType":"212","messageId":"213","endLine":11,"endColumn":13},{"ruleId":"206","replacedBy":"215"},{"ruleId":"208","replacedBy":"216"},{"ruleId":"210","severity":1,"message":"217","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":14},{"ruleId":"210","severity":1,"message":"218","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"210","severity":1,"message":"219","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":15},{"ruleId":"210","severity":1,"message":"220","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":22},{"ruleId":"210","severity":1,"message":"221","line":3,"column":34,"nodeType":"212","messageId":"213","endLine":3,"endColumn":44},{"ruleId":"210","severity":1,"message":"222","line":3,"column":70,"nodeType":"212","messageId":"213","endLine":3,"endColumn":85},{"ruleId":"210","severity":1,"message":"223","line":4,"column":59,"nodeType":"212","messageId":"213","endLine":4,"endColumn":73},{"ruleId":"210","severity":1,"message":"224","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":16},{"ruleId":"206","replacedBy":"225"},{"ruleId":"208","replacedBy":"226"},{"ruleId":"210","severity":1,"message":"227","line":13,"column":9,"nodeType":"212","messageId":"213","endLine":13,"endColumn":16},{"ruleId":"206","replacedBy":"228"},{"ruleId":"208","replacedBy":"229"},{"ruleId":"206","replacedBy":"230"},{"ruleId":"208","replacedBy":"231"},{"ruleId":"210","severity":1,"message":"232","line":221,"column":7,"nodeType":"212","messageId":"213","endLine":221,"endColumn":23},{"ruleId":"210","severity":1,"message":"233","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"234","line":15,"column":10,"nodeType":"212","messageId":"213","endLine":15,"endColumn":20},{"ruleId":"210","severity":1,"message":"235","line":22,"column":10,"nodeType":"212","messageId":"213","endLine":22,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":284,"column":19,"nodeType":"238","endLine":288,"endColumn":21},{"ruleId":"206","replacedBy":"239"},{"ruleId":"208","replacedBy":"240"},{"ruleId":"210","severity":1,"message":"241","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":24},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'reqObj' is assigned a value but never used.","Identifier","unusedVar","'Error' is defined but never used.",["242"],["243"],"'SignIn' is defined but never used.","'SignUp' is defined but never used.","'Profile' is defined but never used.","'ForgotPassword' is defined but never used.","'getScreens' is defined but never used.","'purchaseTickets' is defined but never used.","'setShowTimings' is defined but never used.","'seatPlan' is defined but never used.",["242"],["243"],"'classes' is assigned a value but never used.",["242"],["243"],["242"],["243"],"'redirectToSignin' is assigned a value but never used.","'Avatar' is defined but never used.","'getProfile' is defined but never used.","'background' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["242"],["243"],"'getShowTimings' is defined but never used.","no-global-assign","no-unsafe-negation"]