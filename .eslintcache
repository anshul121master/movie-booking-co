[{"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js":"1","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js":"2","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js":"3","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js":"4","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js":"5","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js":"6","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"7","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js":"8","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js":"9","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js":"10","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js":"11","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js":"12","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js":"13","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"14","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js":"15","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js":"16","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"17","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js":"18","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js":"19","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js":"20","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js":"21","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js":"22","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"23","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js":"24","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js":"25","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js":"26","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js":"27","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js":"28","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"29","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"30","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"31","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":156,"mtime":1606720032227,"results":"35","hashOfConfig":"34"},{"size":548,"mtime":1607500270551,"results":"36","hashOfConfig":"34"},{"size":4577,"mtime":1607169874160,"results":"37","hashOfConfig":"34"},{"size":247,"mtime":1606900214206,"results":"38","hashOfConfig":"34"},{"size":235,"mtime":1606900214206,"results":"39","hashOfConfig":"34"},{"size":1382,"mtime":1606900214183,"results":"40","hashOfConfig":"34"},{"size":394,"mtime":1606900214200,"results":"41","hashOfConfig":"34"},{"size":1236,"mtime":1606923366165,"results":"42","hashOfConfig":"34"},{"size":1692,"mtime":1607503217635,"results":"43","hashOfConfig":"34"},{"size":802,"mtime":1606900214197,"results":"44","hashOfConfig":"34"},{"size":4024,"mtime":1607495081816,"results":"45","hashOfConfig":"34"},{"size":1877,"mtime":1607497903831,"results":"46","hashOfConfig":"34"},{"size":231,"mtime":1606900214204,"results":"47","hashOfConfig":"34"},{"size":237,"mtime":1606900214203,"results":"48","hashOfConfig":"34"},{"size":297,"mtime":1606720032275,"results":"49","hashOfConfig":"34"},{"size":241,"mtime":1606900214206,"results":"50","hashOfConfig":"34"},{"size":226,"mtime":1606900214204,"results":"51","hashOfConfig":"34"},{"size":232,"mtime":1606900214201,"results":"52","hashOfConfig":"34"},{"size":452,"mtime":1606925104470,"results":"53","hashOfConfig":"34"},{"size":243,"mtime":1606924889016,"results":"54","hashOfConfig":"34"},{"size":259,"mtime":1606900214199,"results":"55","hashOfConfig":"34"},{"size":2744,"mtime":1607497903898,"results":"56","hashOfConfig":"34"},{"size":919,"mtime":1606900214199,"results":"57","hashOfConfig":"34"},{"size":627,"mtime":1606900214201,"results":"58","hashOfConfig":"34"},{"size":13780,"mtime":1607487453262,"results":"59","hashOfConfig":"34"},{"size":1309,"mtime":1607494926688,"results":"60","hashOfConfig":"34"},{"size":8388,"mtime":1607489503737,"results":"61","hashOfConfig":"34"},{"size":3477,"mtime":1607497903849,"results":"62","hashOfConfig":"34"},{"size":2618,"mtime":1607497903843,"results":"63","hashOfConfig":"34"},{"size":8302,"mtime":1607500693213,"results":"64","hashOfConfig":"34"},{"size":3489,"mtime":1607503022842,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1m7sr9s",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js",[],["143","144"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js",[],["145","146"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js",[],["147","148"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",["149","150"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMovieAndTheaterList } from '../../../store/actions/shared';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass MovieContainer extends Component {\r\n    state = {\r\n        movieSelected: false\r\n    }\r\n\r\n    handleSelectedMovie = (movie) => {\r\n        const { dispatch } = this.props;\r\n        const { movieSelected } = this.state;\r\n        dispatch(setMovieAndTheaterList(movie));\r\n        this.setState({\r\n            movieSelected: true\r\n        })\r\n            // dispatch movie object and theatersList to store\r\n            // setstate to true\r\n            // navigate to moviepage\r\n    }\r\n\r\n    render() {\r\n        const { moviesList } = this.props;\r\n        if(this.state.movieSelected === true) {\r\n            return <Redirect to='/moviePage' />\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                MovieContainer\r\n                {/* iterate over moviesList and render movie cards */}\r\n                {/* {moviesList.map(movie => \r\n                <MovieCard key={movie.movieId} movieDetails ={movie} handleSelectedMovie={this.handleSelectedMovie}/> \r\n                )} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({moviesList}) {\r\n    return {\r\n        moviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieContainer)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js",[],["151","152"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js",["153","154","155"],"import { setSelectedCity } from './city';\r\nimport { getAllMovies, setSelectedMovie } from './movie';\r\nimport { getMovies, getTheaters, getScreens, getSeatPlan } from '../../utils/api';\r\nimport { getAllTheaters, setSeatPlan, setSelectedTheater, setShowTimings } from './theater';\r\nimport seatPlan from '../reducers/seatPlan';\r\n\r\n\r\nexport function setCityAndMoviesList(city) {\r\n    return (dispatch) => {\r\n        //dispatch selected city to store\r\n        dispatch(setSelectedCity(city));\r\n        //api call to fetch all movies in the selected city and dispatch the moviesList to store\r\n        getMovies(city.id).then(moviesList => dispatch(getAllMovies(moviesList)))\r\n    }\r\n}\r\n\r\nexport function setMovieAndTheaterList(movie) {\r\n    return (dispatch, getState) => {\r\n        const {selectedCity} = getState();\r\n        dispatch(setSelectedMovie(movie));\r\n        getTheaters(selectedCity.id, movie.movieId)\r\n        .then(theatersList => dispatch(getAllTheaters(theatersList)))\r\n    }\r\n}\r\n\r\nexport function setTheaterAndSeatPlan(theater, seatPlanId) {\r\n    return (dispatch) => {\r\n        dispatch(setSelectedTheater(theater));\r\n        getSeatPlan(seatPlanId)\r\n        .then(seatPlan => dispatch(setSeatPlan(seatPlan)))\r\n    }\r\n}\r\n\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js",["156","157","158","159","160","161","162","163","164","165","166","167"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js",[],["168","169"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js",["170"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],["171","172"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js",[],["173","174"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js",["175"],"import { getShowTimings } from '../../utils/api'\r\n\r\n//add selected city action creator\r\nexport const SET_SELECTED_CITY = 'SET_SELECTED_CITY'\r\n\r\nexport function setSelectedCity(city) {\r\n    return {\r\n        type: SET_SELECTED_CITY,\r\n        city\r\n    }\r\n}\r\n\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js",["176"],"import React, {Component} from 'react'\r\nimport { getMovies } from '../../utils/api'\r\nimport { connect } from 'react-redux'\r\nimport { setCityAndMoviesList } from '../../store/actions/shared'\r\n\r\nclass Header extends Component {\r\n    onCityChange = (event) => {\r\n        const cityId= event.target.value;\r\n        const { listOfCities, dispatch } = this.props; // from home component\r\n        const selectedCityObject = listOfCities.filter(city => city.id === cityId);\r\n        dispatch(setCityAndMoviesList(selectedCityObject[0]))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Header\r\n                {/* populate city dropdown based on listOfCities */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }, ownProps) {\r\n    const { listOfCities } = ownProps;\r\n    return { \r\n        listOfCities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js",["177","178","179","180"],"import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getProfile } from \"../../utils/api\";\r\nimport { uploadImage } from \"../../utils/api\";\r\nimport { updateProfile } from \"../../utils/api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { background } from \"../../theme\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        MovieBooking\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  profileInfoDiv: {\r\n    width: \"100vw\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"50px\",\r\n  },\r\n  cardStyle: {\r\n    minWidth: \"70vw\",\r\n    boxShadow: \"5px 10px 18px #888888\",\r\n    // backgroundColor: \"#2F363F\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  //   textFieldColor:{\r\n  //     backgroundColor: \"white\"\r\n  //   },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  profileImg: {\r\n    width: \"126px\",\r\n    height: \"126px\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    padding: \"2px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  userIcon: {\r\n    color: \"grey\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  successMessageColor: {\r\n    color: \"green\",\r\n  },\r\n  failedMessageColor: {\r\n    color: \"red\",\r\n  },\r\n  loadingPanel: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    zIndex: 100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    firstName: \"Anshul\",\r\n    lastName: \"Agarwal\",\r\n    phone: \"+91-7376487376\",\r\n    email: \"anshula128@gmail.com\",\r\n    birthday: \"1997-05-18\",\r\n    imageUrl: \"dffd\",\r\n    infoMessage: \"Successfully\",\r\n    imageUploadErrorMessage: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  //   componentDidMount() {\r\n  //     getProfile().then((userProfile) => {\r\n  //       if (userProfile.error === undefined) {\r\n  //         const birthday = this.formatDate(userProfile.dateOfBirth);\r\n  //         this.setState({\r\n  //           firstName: userProfile.fullName.split(\" \")[0],\r\n  //           lastName: userProfile.fullName.split(\" \")[1],\r\n  //           email: userProfile.email,\r\n  //           phone: userProfile.phoneNumber,\r\n  //           birthday,\r\n  //           imageUrl: userProfile.imageUrl,\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   }\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  onImageUpload = (event) => {\r\n    console.log(\"onImageupload called\");\r\n    const imageObj = event.target.files[0];\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"profilePhoto\", imageObj);\r\n\r\n    uploadImage(formData).then((resp) => {\r\n      if (resp.error === undefined) {\r\n        const imageUrl = resp.imageUrl;\r\n        this.setState({\r\n          imageUrl,\r\n        });\r\n      } else\r\n        this.setState({\r\n          imageUploadErrorMessage:\r\n            \"Some Error Occurred in uploading profile photo. Please retry.\",\r\n        });\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n  //   validatePhone = (event) => {\r\n  //     const phone = event.target.value;\r\n  //     console.log(phone.length)  //15 for india\r\n  //   };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setPhone = (event) => {\r\n    const phone = event.target.value;\r\n    this.setState({\r\n      phone,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n    } = this.state;\r\n    if (fnameIsValid === true && lnameIsValid === true) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      let userInfo = {\r\n        fullName: `${firstName} ${lastName}`,\r\n        email,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n        imageUrl,\r\n      };\r\n      updateProfile(userInfo).then((res) => {\r\n        if (res === \"success\")\r\n          this.setState({\r\n            infoMessage: \"Profile Updated Successfully\",\r\n            loading: false,\r\n          });\r\n        else\r\n          this.setState({\r\n            infoMessage: \"Some Error Occured. Could not update Profile\",\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n      infoMessage,\r\n      imageUploadErrorMessage,\r\n      loading,\r\n    } = this.state;\r\n\r\n    //if(redirectToSignin) return <Redirect to=\"/signin\" />\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        {/* <div className={classes.profileInfoDiv}></div> */}\r\n\r\n        <Grid container justify=\"center\">\r\n          <Card className={classes.cardStyle} variant=\"outlined\">\r\n            <CardContent>\r\n              <div className={classes.paper}>\r\n                {imageUrl === \"\" ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faUserCircle}\r\n                    size=\"9x\"\r\n                    className={classes.userIcon}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src=\"gorilla.jpg\"\r\n                    alt=\"profile image\"\r\n                    className={classes.profileImg}\r\n                  />\r\n                )}\r\n                {imageUploadErrorMessage !== \"\" && (\r\n                  <Typography className={classes.failedMessageColor}>\r\n                    {imageUploadErrorMessage}\r\n                  </Typography>\r\n                )}\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"icon-button-file\"\r\n                  type=\"file\"\r\n                  onChange={this.onImageUpload}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  My Profile\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"firstName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        value={firstName}\r\n                        error={fnameIsValid ? false : true}\r\n                        helperText={\r\n                          fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        value={lastName}\r\n                        autoComplete=\"lname\"\r\n                        error={lnameIsValid ? false : true}\r\n                        helperText={\r\n                          lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        type=\"email\"\r\n                        autoComplete=\"email\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <MuiPhoneNumber\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Mobile Number\"\r\n                        name=\"phone\"\r\n                        value={phone}\r\n                        defaultCountry={\"in\"}\r\n                        autoComplete=\"phone\"\r\n                        onBlur={this.setPhone}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"date\"\r\n                        label=\"Birthday\"\r\n                        name=\"date\"\r\n                        defaultValue={birthday}\r\n                        type=\"date\"\r\n                        autoComplete=\"date\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        onBlur={this.setBirthday}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {loading && (\r\n                    <Grid container spacing={5} justify=\"center\">\r\n                      <Grid item>\r\n                        <CircularProgress />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Update Changes\r\n                  </Button>\r\n                  <Grid container justify=\"flex-start\">\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={\r\n                          infoMessage.includes(\"Successfully\")\r\n                            ? classes.successMessageColor\r\n                            : classes.failedMessageColor\r\n                        }\r\n                      >\r\n                        {infoMessage}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Link href=\"/home\" variant=\"body2\">\r\n                        Proceed to home\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Profile);\r\n",["181","182"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",["183"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",["184"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",["185"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"188","replacedBy":"191"},{"ruleId":"186","replacedBy":"192"},{"ruleId":"188","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":13,"column":17,"nodeType":"196","messageId":"197","endLine":13,"endColumn":30},{"ruleId":"194","severity":1,"message":"198","line":24,"column":17,"nodeType":"196","messageId":"197","endLine":24,"endColumn":27},{"ruleId":"186","replacedBy":"199"},{"ruleId":"188","replacedBy":"200"},{"ruleId":"194","severity":1,"message":"201","line":3,"column":34,"nodeType":"196","messageId":"197","endLine":3,"endColumn":44},{"ruleId":"194","severity":1,"message":"202","line":4,"column":59,"nodeType":"196","messageId":"197","endLine":4,"endColumn":73},{"ruleId":"194","severity":1,"message":"203","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":16},{"ruleId":"194","severity":1,"message":"204","line":2,"column":21,"nodeType":"196","messageId":"197","endLine":2,"endColumn":30},{"ruleId":"194","severity":1,"message":"205","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":12},{"ruleId":"194","severity":1,"message":"206","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":14},{"ruleId":"194","severity":1,"message":"207","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":14},{"ruleId":"194","severity":1,"message":"208","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":15},{"ruleId":"194","severity":1,"message":"209","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":14},{"ruleId":"194","severity":1,"message":"210","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":13},{"ruleId":"194","severity":1,"message":"211","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":16},{"ruleId":"194","severity":1,"message":"212","line":11,"column":27,"nodeType":"196","messageId":"197","endLine":11,"endColumn":33},{"ruleId":"194","severity":1,"message":"213","line":11,"column":35,"nodeType":"196","messageId":"197","endLine":11,"endColumn":41},{"ruleId":"194","severity":1,"message":"214","line":11,"column":43,"nodeType":"196","messageId":"197","endLine":11,"endColumn":48},{"ruleId":"194","severity":1,"message":"215","line":12,"column":8,"nodeType":"196","messageId":"197","endLine":12,"endColumn":18},{"ruleId":"186","replacedBy":"216"},{"ruleId":"188","replacedBy":"217"},{"ruleId":"194","severity":1,"message":"218","line":114,"column":7,"nodeType":"196","messageId":"197","endLine":114,"endColumn":13},{"ruleId":"186","replacedBy":"219"},{"ruleId":"188","replacedBy":"220"},{"ruleId":"186","replacedBy":"221"},{"ruleId":"188","replacedBy":"222"},{"ruleId":"194","severity":1,"message":"223","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"204","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":19},{"ruleId":"194","severity":1,"message":"224","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"225","line":15,"column":10,"nodeType":"196","messageId":"197","endLine":15,"endColumn":20},{"ruleId":"194","severity":1,"message":"226","line":22,"column":10,"nodeType":"196","messageId":"197","endLine":22,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":284,"column":19,"nodeType":"229","endLine":288,"endColumn":21},{"ruleId":"186","replacedBy":"230"},{"ruleId":"188","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":64,"column":26,"nodeType":"234","messageId":"235","endLine":64,"endColumn":95},{"ruleId":"194","severity":1,"message":"236","line":21,"column":17,"nodeType":"196","messageId":"197","endLine":21,"endColumn":29},{"ruleId":"194","severity":1,"message":"237","line":131,"column":17,"nodeType":"196","messageId":"197","endLine":131,"endColumn":24},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],["238"],["239"],["238"],["239"],"no-unused-vars","'movieSelected' is assigned a value but never used.","Identifier","unusedVar","'moviesList' is assigned a value but never used.",["238"],["239"],"'getScreens' is defined but never used.","'setShowTimings' is defined but never used.","'seatPlan' is defined but never used.","'getMovies' is defined but never used.","'Home' is defined but never used.","'SignIn' is defined but never used.","'SignUp' is defined but never used.","'Profile' is defined but never used.","'Screen' is defined but never used.","'Movie' is defined but never used.","'Purchase' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'MyBookings' is defined but never used.",["238"],["239"],"'reqObj' is assigned a value but never used.",["238"],["239"],["238"],["239"],"'getShowTimings' is defined but never used.","'Avatar' is defined but never used.","'getProfile' is defined but never used.","'background' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["238"],["239"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'theatersList' is assigned a value but never used.","'theater' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]