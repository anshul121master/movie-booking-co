[{"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js":"2","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js":"3","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js":"4","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js":"5","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js":"6","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\error\\Error.js":"7","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js":"8","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\pageNotFound\\PageNotFound.js":"9","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js":"10","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js":"11","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"12","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js":"13","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js":"14","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js":"15","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"16","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js":"17","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\screen.js":"18","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\helper.js":"19","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"20","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js":"21","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js":"22","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js":"23","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\Purchase.js":"24","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js":"25","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\loading.js":"26","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js":"27","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"28","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"29","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js":"30","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"31","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js":"32","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js":"33","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"34","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js":"35","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js":"36","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js":"37","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js":"38","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"39","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"40","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\screen\\Screen.js":"41","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\screen.js":"42","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatsAndPrice.js":"43","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"44","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js":"45","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"46","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js":"47","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js":"48","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js":"49","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js":"50","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"51","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"52"},{"size":1130,"mtime":1607940912327,"results":"53","hashOfConfig":"54"},{"size":2677,"mtime":1608468012572,"results":"55","hashOfConfig":"54"},{"size":653,"mtime":1607610469454,"results":"56","hashOfConfig":"54"},{"size":156,"mtime":1606720032227,"results":"57","hashOfConfig":"54"},{"size":946,"mtime":1607669275726,"results":"58","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"54"},{"size":908,"mtime":1607610469313,"results":"60","hashOfConfig":"54"},{"size":1113,"mtime":1608543872812,"results":"61","hashOfConfig":"54"},{"size":2481,"mtime":1608113670339,"results":"62","hashOfConfig":"54"},{"size":11020,"mtime":1608624665076,"results":"63","hashOfConfig":"54"},{"size":3005,"mtime":1608726632632,"results":"64","hashOfConfig":"54"},{"size":231,"mtime":1607610469319,"results":"65","hashOfConfig":"54"},{"size":247,"mtime":1607610469320,"results":"66","hashOfConfig":"54"},{"size":242,"mtime":1607584538147,"results":"67","hashOfConfig":"54"},{"size":297,"mtime":1606720032275,"results":"68","hashOfConfig":"54"},{"size":3671,"mtime":1608466272262,"results":"69","hashOfConfig":"54"},{"size":10240,"mtime":1609399067809,"results":"70","hashOfConfig":"54"},{"size":179,"mtime":1607610469317,"results":"71","hashOfConfig":"54"},{"size":256,"mtime":1608550658400,"results":"72","hashOfConfig":"54"},{"size":7184,"mtime":1609399067796,"results":"73","hashOfConfig":"54"},{"size":7142,"mtime":1608726530747,"results":"74","hashOfConfig":"54"},{"size":16837,"mtime":1608726466538,"results":"75","hashOfConfig":"54"},{"size":11089,"mtime":1608561810920,"results":"76","hashOfConfig":"54"},{"size":10151,"mtime":1608563629117,"results":"77","hashOfConfig":"54"},{"size":232,"mtime":1606900214201,"results":"78","hashOfConfig":"54"},{"size":200,"mtime":1607543423875,"results":"79","hashOfConfig":"54"},{"size":140,"mtime":1607544076655,"results":"80","hashOfConfig":"54"},{"size":2103,"mtime":1608625022352,"results":"81","hashOfConfig":"54"},{"size":4388,"mtime":1608293624059,"results":"82","hashOfConfig":"54"},{"size":3359,"mtime":1608459761735,"results":"83","hashOfConfig":"54"},{"size":8910,"mtime":1608726632654,"results":"84","hashOfConfig":"54"},{"size":347,"mtime":1607955968359,"results":"85","hashOfConfig":"54"},{"size":7177,"mtime":1608561528161,"results":"86","hashOfConfig":"54"},{"size":241,"mtime":1607497903909,"results":"87","hashOfConfig":"54"},{"size":226,"mtime":1606900214204,"results":"88","hashOfConfig":"54"},{"size":2203,"mtime":1608463784705,"results":"89","hashOfConfig":"54"},{"size":2009,"mtime":1608020140356,"results":"90","hashOfConfig":"54"},{"size":394,"mtime":1606900214200,"results":"91","hashOfConfig":"54"},{"size":2404,"mtime":1608646054122,"results":"92","hashOfConfig":"54"},{"size":5123,"mtime":1608653013620,"results":"93","hashOfConfig":"54"},{"size":17314,"mtime":1609399067802,"results":"94","hashOfConfig":"54"},{"size":242,"mtime":1607610469320,"results":"95","hashOfConfig":"54"},{"size":362,"mtime":1608463276041,"results":"96","hashOfConfig":"54"},{"size":8691,"mtime":1608646054120,"results":"97","hashOfConfig":"54"},{"size":209,"mtime":1608020597106,"results":"98","hashOfConfig":"54"},{"size":2971,"mtime":1608726632635,"results":"99","hashOfConfig":"54"},{"size":1956,"mtime":1608726632630,"results":"100","hashOfConfig":"54"},{"size":627,"mtime":1606900214201,"results":"101","hashOfConfig":"54"},{"size":237,"mtime":1606900214203,"results":"102","hashOfConfig":"54"},{"size":1004,"mtime":1607691997726,"results":"103","hashOfConfig":"54"},{"size":6293,"mtime":1608653013623,"results":"104","hashOfConfig":"54"},{"size":1133,"mtime":1608625022352,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1m7sr9s",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"135"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"121"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js",[],["223","224"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js",[],["225","226"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\ProtectedRoute.js",[],["227","228"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js",[],["229","230"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\error\\Error.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js",[],["231","232"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\pageNotFound\\PageNotFound.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],["233","234"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js",[],["235","236"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js",[],["237","238"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",["239","240"],"import React from 'react';\r\nimport { GitHub, Instagram, LinkedIn, Twitter, Facebook } from '@material-ui/icons';\r\nimport { footerText, footer, headerText, header } from '../../theme'\r\n\r\nexport default function Footer() {\r\n\r\n    const footerStyle = {\r\n        color: headerText,\r\n        backgroundColor: header,\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em',\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        width: '100%',\r\n        top: 'auto',\r\n        marginTop: '50px',\r\n        height: '185px'\r\n    }\r\n\r\n    const phantom = {\r\n        display: 'block',\r\n        padding: '20px',\r\n        height: '185px',\r\n    }\r\n\r\n\r\n    const copyRightStyle = {\r\n        backgroundColor: header,\r\n        color: headerText,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={phantom}></div>\r\n            <div className=\"main-footer\" style={footerStyle}>\r\n        <div className=\"container\">\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\r\n                        {/* Column1 */}\r\n                        <div style={{\r\n                            fontSize: '1em'\r\n                        }}>\r\n                            <h4 style={{ fontSize: '1.2em', textAlign: 'center' }}>MovieBooking.co</h4>\r\n                            <ul style={{ fontSize: '1em', listStyleType: 'none' }}>\r\n                                <li>033 6621 5000</li>\r\n                                <li>Pune, India</li>\r\n                                <li>Talwade</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Column2 */}\r\n                        <div style={{\r\n                            fontSize: '1em',\r\n                        }}>\r\n                            <h4 style={{ fontSize: '1.2em' }}>Follow Us</h4>\r\n                            <ul style={{\r\n                                fontSize: '1em', listStyleType: 'none',\r\n                                display: 'flex', flexDirection: 'column',\r\n                                alignItems: 'center', justifyContent: 'center',\r\n                                paddingTop: 5\r\n                            }}>\r\n                                <li><Facebook /></li>\r\n                                <li><Twitter /></li>\r\n                                <li><Instagram /></li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Column3 */}\r\n                        <div style={{\r\n                            fontSize: '1em'\r\n                        }}>\r\n                            <h4 style={{ fontSize: '1.2em' }}> Support Us</h4>\r\n                            <ul style={{\r\n                                fontSize: '1em', listStyleType: 'none',\r\n                                display: 'flex', flexDirection: 'column',\r\n                                alignItems: 'center', justifyContent: 'center',\r\n                                paddingTop: 5\r\n                            }}>\r\n                                <li><GitHub /></li>\r\n                                <li><LinkedIn /></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div style={copyRightStyle}>\r\n                        <p className=\"col-sm\">\r\n                            &copy;{new Date().getFullYear()} MovieBooking.co | All rights reserved |\r\n          Terms Of Service | Privacy\r\n        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\screen.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\helper.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js",["241"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getProfile } from \"../../utils/api\";\r\nimport { uploadImage } from \"../../utils/api\";\r\nimport { updateProfile } from \"../../utils/api\";\r\nimport { userProfilePhoto } from \"../../config/apiConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"../../shared-components/Loader\";\r\nimport Footer from \"../../shared-components/footer/Footer\";\r\nimport Header from \"../../shared-components/header/Header\";\r\nimport { header, footer } from \"../../theme\";\r\nimport { setAuthedUser } from \"../../store/actions/authedUser\";\r\nimport { connect } from \"react-redux\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  profileInfoDiv: {\r\n    width: \"100vw\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  paper: {\r\n    paddingTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"50px\",\r\n  },\r\n  cardStyle: {\r\n    marginTop: \"100px\",\r\n    minWidth: \"70vw\",\r\n    margin: \"30px 0\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: 45,\r\n    borderRadius: 0,\r\n  },\r\n\r\n  imageContainer: {\r\n    position:\"relative\",\r\n    minWidth: \"100%\",\r\n    backgroundColor: \"#0A3D62\",\r\n    minHeight: \"170px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n   // justifyContent: \"space-between\",\r\n   // alignItems: \"center\",\r\n  },\r\n  cameraIcon: {\r\n    position: \"absolute\",\r\n    top: \"75%\",\r\n    right: \"-10px\",\r\n    size: 20,\r\n    backgroundColor: \"#d81b60\",\r\n    padding: \"9px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"orange\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  profileImg: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"2px\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"50%\"\r\n  },\r\n  userIcon: {\r\n    color: \"grey\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  successMessageColor: {\r\n    color: \"green\",\r\n    marginTop: 10,\r\n  },\r\n  failedMessageColor: {\r\n    color: \"red\",\r\n    marginTop: 10,\r\n  },\r\n  loadingPanel: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    zIndex: 100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    phoneIsValid: true,\r\n    email: \"\",\r\n    birthday: \"\",\r\n    imageUrl: null,\r\n    infoMessage: \"\",\r\n    loadProfileMessage: \"\",\r\n    imageUploadErrorMessage: \"\",\r\n    loading: false,\r\n    loaderForPic: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    getProfile().then((res) => {\r\n      if (res.status === 200) {\r\n        let userProfile = res.response;\r\n        const birthday = this.formatDate(userProfile.dateOfBirth);\r\n        this.setState({\r\n          loading: false,\r\n          loadProfileMessage: \"\",\r\n          firstName: userProfile.fullName.split(\" \")[0],\r\n          lastName: userProfile.fullName.split(\" \")[1],\r\n          email: userProfile.email,\r\n          phone: userProfile.phoneNumber,\r\n          birthday: birthday,\r\n          imageUrl: userProfile.imageUrl,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          loadProfileMessage: res.exception.errorMsg,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  onImageUpload = (event) => {\r\n    console.log(\"onImageupload called\");\r\n    const imageObj = event.target.files[0];\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"profilePhoto\", imageObj);\r\n    this.setState({\r\n      loaderForPic: true,\r\n    });\r\n    uploadImage(formData).then((res) => {\r\n      this.setState({\r\n        loaderForPic: false,\r\n      });\r\n      if (res.status === 200) {\r\n        const imageUrl = res.response.imageUrl;\r\n        this.setState({\r\n          imageUploadErrorMessage: \"\",\r\n          imageUrl,\r\n        });\r\n        let { authedUser, dispatch } = this.props;\r\n        let authedUserImage = {\r\n          exception: authedUser.exception,\r\n          response: {\r\n            ...authedUser.response,\r\n            imageUrl,\r\n          },\r\n        };\r\n        dispatch(setAuthedUser(authedUserImage));\r\n      } else\r\n        this.setState({\r\n          imageUploadErrorMessage: res.exception.errorMsg,\r\n        });\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  validatePhone = (phone) => {\r\n    console.log(phone);\r\n    if (phone.substring(1, 3) === \"91\" && phone.length === 15)\r\n      this.setState({\r\n        phone,\r\n        phoneIsValid: true,\r\n      });\r\n    else\r\n      this.setState({\r\n        phone,\r\n        phoneIsValid: false,\r\n      });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      phoneIsValid,\r\n      birthday,\r\n      imageUrl,\r\n    } = this.state;\r\n    if (\r\n      fnameIsValid === true &&\r\n      lnameIsValid === true &&\r\n      phoneIsValid === true\r\n    ) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      let userInfo = {\r\n        fullName: `${firstName} ${lastName}`,\r\n        email,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n        imageUrl,\r\n      };\r\n      updateProfile(userInfo).then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            infoMessage: \"Profile Updated Successfully\",\r\n            loading: false,\r\n          });\r\n          let authedUser = {\r\n            response: userInfo,\r\n            exception: null,\r\n          };\r\n          this.props.dispatch(setAuthedUser(authedUser));\r\n        } else\r\n          this.setState({\r\n            infoMessage: res.exception.errorMsg,\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      phoneIsValid,\r\n      birthday,\r\n      imageUrl,\r\n      infoMessage,\r\n      imageUploadErrorMessage,\r\n      loadProfileMessage,\r\n      loading,\r\n      loaderForPic,\r\n    } = this.state;\r\n\r\n    let today = new Date();\r\n    let date = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\r\n\r\n    return (\r\n      <div>\r\n        {loading && <Loader />}\r\n        <Header />\r\n        <Container className={classes.imageContainer}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", position:\"absolute\", top:\"60%\" }}>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n              onChange={this.onImageUpload}\r\n            />\r\n            {imageUrl === null ? (\r\n              <div\r\n                style={{ position: \"relative\", width: 100, marginBottom: 10 }}\r\n              >\r\n                {loaderForPic && (\r\n                  <CircularProgress\r\n                    style={{ position: \"absolute\", top: \"35%\", left: \"30%\" }}\r\n                    color=\"secondary\"\r\n                    size={40}\r\n                  />\r\n                )}\r\n\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  size=\"8x\"\r\n                  className={classes.userIcon}\r\n                />\r\n\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    disabled={ loaderForPic ? true : false }\r\n                    color=\"primary\"\r\n                    className={classes.cameraIcon}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: 140,\r\n                  height: 140,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n\r\n              {loaderForPic && (\r\n                <CircularProgress\r\n                  style={{ position: \"absolute\", top: \"35%\", left: \"35%\" }}\r\n                  color=\"secondary\"\r\n                  size={40}\r\n                />\r\n              )}\r\n                <img\r\n                  src={userProfilePhoto + imageUrl}\r\n                  alt=\"profile image\"\r\n                  className={classes.profileImg}\r\n                />\r\n\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    disabled={ loaderForPic ? true : false }\r\n                    color=\"primary\"\r\n                    className={classes.cameraIcon}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <Typography variant=\"h5\" style={{ color: footer, marginLeft: 15, position:\"absolute\",top:\"20%\" }}>\r\n            {phone}\r\n          </Typography>\r\n        </Container>\r\n        {imageUploadErrorMessage !== \"\" && (\r\n          <Typography\r\n            style={{ marginTop: 5, marginLeft:180, fontWeight:\"bold\"}}\r\n            className={classes.failedMessageColor}\r\n          >\r\n            {imageUploadErrorMessage}\r\n          </Typography>\r\n        )}\r\n        <Container className={classes.cardStyle} component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Grid container justify=\"center\">\r\n            <div className={classes.paper}>\r\n              {loadProfileMessage !== \"\" && (\r\n                <Typography className={classes.failedMessageColor}>\r\n                  {loadProfileMessage}\r\n                </Typography>\r\n              )}\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                My Profile\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      value={firstName}\r\n                      error={fnameIsValid ? false : true}\r\n                      helperText={\r\n                        fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                      }\r\n                      onChange={this.validateName}\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      value={lastName}\r\n                      autoComplete=\"lname\"\r\n                      error={lnameIsValid ? false : true}\r\n                      helperText={\r\n                        lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                      }\r\n                      onChange={this.validateName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MuiPhoneNumber\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"phone\"\r\n                      label=\"Mobile Number\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      defaultCountry={\"in\"}\r\n                      onlyCountries={[\"in\"]}\r\n                      autoComplete=\"phone\"\r\n                      error={phoneIsValid ? false : true}\r\n                      helperText={\r\n                        phoneIsValid\r\n                          ? \"\"\r\n                          : \"Must begin with +91 and should be 10 digits in length.\"\r\n                      }\r\n                      onChange={this.validatePhone}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"date\"\r\n                      label=\"Birthday\"\r\n                      name=\"date\"\r\n                      value={birthday}\r\n                      type=\"date\"\r\n                      autoComplete=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      inputProps={{ max: date }}\r\n                      onChange={this.setBirthday}\r\n                      onKeyPress={(event) => event.preventDefault()}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography\r\n                    className={\r\n                      infoMessage.includes(\"Successfully\")\r\n                        ? classes.successMessageColor\r\n                        : classes.failedMessageColor\r\n                    }\r\n                  >\r\n                    {infoMessage}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  Update Changes\r\n                </Button>\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link\r\n                      to=\"/\"\r\n                      style={{ textDecoration: \"none\", color: header }}\r\n                    >\r\n                      Proceed to home\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser,\r\n  };\r\n}\r\nexport default withStyles(styles)(connect(mapStateToProps)(Profile));\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js",["242"],"import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport { signup } from \"../../utils/api\";\r\nimport Password from \"./Password\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Loader from \"../../shared-components/Loader\";\r\nimport Header from \"../../shared-components/header/Header\";\r\nimport Footer from \"../../shared-components/footer/Footer\";\r\nimport { header } from \"../../theme\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"red\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorColor: {\r\n    marginTop: 20,\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    redirectTologin: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    phoneErrorMsg: false,\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    email: \"\",\r\n    phoneIsValid: true,\r\n    birthday: \"\",\r\n    password: \"\",\r\n    passwordIsValid: true,\r\n    confirmPasswordIsValid: true,\r\n    loading: false,\r\n    responseOnSuccess: \"\",\r\n    responseOnError: \"\",\r\n  };\r\n\r\n  passwordsAreValid = (password, passwordIsValid, confirmPasswordIsValid) => {\r\n    this.setState({\r\n      password,\r\n      passwordIsValid,\r\n      confirmPasswordIsValid,\r\n    });\r\n  };\r\n\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  validatePhone = (phone) => {\r\n    console.log(phone);\r\n    if (phone.substring(1, 3) === \"91\" && phone.length === 15)\r\n      this.setState({\r\n        phone,\r\n        phoneIsValid: true,\r\n        phoneErrorMsg: false,\r\n      });\r\n    else\r\n      this.setState({\r\n        phone,\r\n        phoneIsValid: false,\r\n        phoneErrorMsg: false,\r\n      });\r\n  };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setEmail = (event) => {\r\n    const email = event.target.value;\r\n    this.setState({\r\n      email,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      phoneIsValid,\r\n      email,\r\n      phone,\r\n      phoneErrorMsg,\r\n      birthday,\r\n      password,\r\n      passwordIsValid,\r\n      confirmPasswordIsValid,\r\n    } = this.state;\r\n    if (\r\n      fnameIsValid === true &&\r\n      lnameIsValid === true &&\r\n      phoneIsValid === true &&\r\n      phone !== \"\" &&\r\n      passwordIsValid === true &&\r\n      confirmPasswordIsValid === true\r\n    ) {\r\n      console.log(\"all fields contain valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      //setting payload\r\n      let userInfo = {\r\n        email,\r\n        name: `${firstName} ${lastName}`,\r\n        password,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n      };\r\n      signup(userInfo).then((res) => {\r\n        if (res.status === 200)\r\n          this.setState({\r\n            loading: false,\r\n            responseOnError: \"\",\r\n            responseOnSuccess: res.response,\r\n            redirectToLogin: true,\r\n          });\r\n        else\r\n          this.setState({\r\n            loading: false,\r\n            responseOnError: res.exception.errorMsg,\r\n          });\r\n      });\r\n    } else {\r\n      if (phone === \"\")\r\n        this.setState({\r\n          phoneErrorMsg: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, authedUser, location } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      phoneIsValid,\r\n      loading,\r\n      redirectToLogin,\r\n      responseOnSuccess,\r\n      responseOnError,\r\n      phoneErrorMsg,\r\n    } = this.state;\r\n\r\n    if (redirectToLogin)\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { \r\n              responseOnSuccess,\r\n              from: location.state === undefined ? \"/\" : location.state.from\r\n             },\r\n          }}\r\n        />\r\n      );\r\n\r\n    if (authedUser !== null && authedUser.response !== null)\r\n      return <Redirect to=\"/\" />;\r\n    \r\n    let today = new Date();\r\n    let date = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Container\r\n          style={{ backgroundColor: \"white\", marginTop: 30, marginBottom: 30 }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          {loading && <Loader />}\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n\r\n            <form className={classes.form} onSubmit={this.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    error={fnameIsValid ? false : true}\r\n                    helperText={\r\n                      fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                    }\r\n                    onBlur={this.validateName}\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                    error={lnameIsValid ? false : true}\r\n                    helperText={\r\n                      lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                    }\r\n                    onBlur={this.validateName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onBlur={this.setEmail}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <MuiPhoneNumber\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"phone\"\r\n                    label=\"Mobile Number\"\r\n                    name=\"phone\"\r\n                    defaultCountry={\"in\"}\r\n                    autoComplete=\"phone\"\r\n                    onlyCountries={[\"in\"]}\r\n                    error={phoneIsValid ? false : true}\r\n                    helperText={\r\n                      phoneIsValid\r\n                        ? \"\"\r\n                        : \"Must begin with +91 and should be 10 digits in length.\"\r\n                    }\r\n                    onChange={this.validatePhone}\r\n                  />\r\n                </Grid>\r\n                {phoneErrorMsg && (\r\n                  <Typography style={{ color: \"red\", fontSize: \"0.8rem\" }}>\r\n                    Please enter a valid Phone number.\r\n                  </Typography>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"date\"\r\n                    label=\"Birthday\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    autoComplete=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    inputProps={{ max:date}}\r\n                    onBlur={this.setBirthday}\r\n                    onKeyPress={(event) => event.preventDefault()}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Password label=\"Password\" passwordsAreValid={this.passwordsAreValid} />\r\n\r\n              {responseOnError !== \"\" && (\r\n                <Typography className={classes.errorColor}>\r\n                  {responseOnError}\r\n                </Typography>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n\r\n              <Grid container justify=\"flex-end\" style={{ marginBottom: 20 }}>\r\n                <Grid item>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\", color: header }}\r\n                    to={{\r\n                      pathname: \"/login\",\r\n                      state: { \r\n                        from: location.state === undefined ? \"/\" : location.state.from\r\n                       },\r\n                    }}\r\n                  >\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return { authedUser };\r\n}\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(SignUp);\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\Purchase.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\loading.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",["243"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMovieAndTheaterList } from '../../../store/actions/shared';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MovieCard from './components/MovieCard'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { GridListTile } from '@material-ui/core';\r\nimport MovieCarousel from './components/MovieCarousel'\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport Loader from \"../../../shared-components/Loader\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { header } from '../../../theme'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n\ttitle: {\r\n\t\tfontWeight: 'bold'\r\n\t}, \r\n\ttile : {\r\n\t\tmargin: 25, \r\n\t\tpadding: 10\r\n\t},\r\n\tlistContainer: {\r\n\t\tflexWrap: 'wrap',\r\n\t\toverflowY: 'inherit',\r\n\t\tjustifyContent: 'center'\r\n\t},\r\n\tcardListItem: {\r\n\t\tmargin: '0.5em', \r\n\t\tboxShadow: '0 4px 8px 0 rgba(0,0,0,0.4)', \r\n\t\tpadding: 0 ,\r\n\t\theight: 'auto !important',\r\n\t\tborderRadius: '15px'\r\n\t}\r\n})\r\n\r\n\r\nclass MovieContainer extends Component {\r\n\tstate = {\r\n\t\tredirect: false\r\n\t}\r\n\r\n\t\r\n\thandleSelectedMovie = (movie) => {\r\n\t\tconst { dispatch } = this.props;\r\n\t\tdispatch(setMovieAndTheaterList(movie, true));\r\n\t\tthis.setState({\r\n\t\t\tredirect: true\r\n\t\t})\r\n\t\t// dispatch movie object and theatersList to store\r\n\t\t// setstate to true\r\n\t\t// navigate to moviepage\t\r\n\t}\r\n\r\n\tgetGridListCols = () => {\r\n\t\tif (isWidthUp('xl', this.props.width)) {\r\n\t\t\treturn 5;\r\n\t\t}\r\n\r\n\t\tif (isWidthUp('lg', this.props.width)) {\r\n\t\t\treturn 4;\r\n\t\t}\r\n\r\n\t\tif (isWidthUp('md', this.props.width)) {\r\n\t\t\treturn 3;\r\n\t\t}\r\n\r\n\t\tif (isWidthUp('sm', this.props.width)) {\r\n\t\t\treturn 2;\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { moviesList, classes } = this.props;\r\n\t\tconst { response, exception } = moviesList;\r\n\r\n\t\treturn (\r\n\t\t\t(Object.keys(moviesList).length !== 0 ?\r\n\t\t\t\t((exception === null ?\r\n\t\t\t\t\t(this.state.redirect ? (<Redirect to={{ pathname: '/movie' }} />) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<MovieCarousel moviesList={moviesList.response} handleSelectedMovie={this.handleSelectedMovie} />\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t<div style={{width:'75%', margin:'auto'}}><Divider variant=\"middle\"/></div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className={classes.tile}>\r\n\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title} >\r\n\t\t\t\t\t\t\t\t\tCurrently Running\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{(response.filter(movie => new Date(movie.dateReleased) < new Date()).length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<GridList className={classes.listContainer} cols={this.getGridListCols()} spacing={0}>\r\n\t\t\t\t\t\t\t\t\t\t{response.filter(movie => new Date(movie.dateReleased) < new Date()).map(movie =>\r\n\t\t\t\t\t\t\t\t\t\t\t<GridListTile key={movie.movieId} className={classes.cardListItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MovieCard movie={movie} handleSelectedMovie={this.handleSelectedMovie} style={{height:'auto'}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</GridList>\r\n\t\t\t\t\t\t\t\t\t: <Typography variant=\"h6\" style={{margin:'15px'}}>No movies available at this time</Typography>)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width:'75%', margin:'auto'}}><Divider variant=\"middle\"/></div>\r\n\t\t\t\t\t\t\t<div className={classes.tile}>\r\n\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title} >\r\n\t\t\t\t\t\t\t\t\tUpcoming Movies\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{(response.filter(movie => new Date(movie.dateReleased) > new Date()).length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<GridList className={classes.listContainer} cols={this.getGridListCols()} spacing={0}>\r\n\t\t\t\t\t\t\t\t\t\t{response.filter(movie => new Date(movie.dateReleased) > new Date()).map(movie =>\r\n\t\t\t\t\t\t\t\t\t\t\t<GridListTile key={movie.movieId} className={classes.cardListItem}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MovieCard movie={movie} handleSelectedMovie={this.handleSelectedMovie} />\r\n\t\t\t\t\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</GridList>\r\n\t\t\t\t\t\t\t\t\t: <Typography variant=\"h6\" style={{margin:'15px'}}>No movies available at this time</Typography>)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>))\r\n\t\t\t\t\t: <Redirect to={{\r\n\t\t\t\t\t\tpathname: '/error',\r\n\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\texception: exception\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}} />))\r\n\t\t\t\t: <Loader />)\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps({ moviesList }) {\r\n\treturn {\r\n\t\tmoviesList\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(withWidth()(connect(mapStateToProps)(MovieContainer)))","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\Password.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js",["244"],"import { setSelectedCity } from './city';\r\nimport { getAllMovies, setSelectedMovie } from './movie';\r\nimport { getMovies, getTheaters, getSeatPlan, lockSeats } from '../../utils/api';\r\nimport { getAllTheaters, setSeatPlan, setSelectedTheater, setShowTimings } from './theater';\r\nimport { setSelectedScreen } from './screen';\r\nimport { setLoading } from './loading'\r\n\r\nexport const SET_SEATS_AND_PRICE = 'SET_SEATS_AND_PRICE'\r\n\r\nexport function setCityAndMoviesList(city) {\r\n    return (dispatch) => {\r\n        //dispatch selected city to store\r\n        dispatch(setSelectedCity(city));\r\n        //api call to fetch all movies in the selected city and dispatch the moviesList to store\r\n        getMovies(city.id)\r\n            .then(moviesList => dispatch(getAllMovies(moviesList)))\r\n    }\r\n}\r\n\r\nexport function setMovieAndTheaterList(movie, setMovie = true) {\r\n    return (dispatch, getState) => {\r\n        const { selectedCity } = getState();\r\n        if (setMovie) {\r\n            dispatch(setSelectedMovie(movie));\r\n        }\r\n        getTheaters(selectedCity.id, movie.movieId)\r\n            .then(theatersList => dispatch(getAllTheaters(theatersList)))\r\n    }\r\n}\r\n\r\nexport function setTheaterAndSeatPlan(theater, seatPlanId, screen) {\r\n    return (dispatch) => {\r\n        dispatch(setSelectedTheater(theater));\r\n\r\n        dispatch(setSelectedScreen(screen));\r\n\r\n        getSeatPlan(seatPlanId)\r\n            .then(seatPlan => dispatch(setSeatPlan(seatPlan)))\r\n    }\r\n}\r\n\r\nfunction lockSeatsAndPrice(selectedSeats, price, response) {\r\n    return {\r\n        type: SET_SEATS_AND_PRICE,\r\n        selectedSeats,\r\n        price,\r\n        response\r\n    }\r\n}\r\n\r\nexport function setSeatsAndPrice(selectedSeats, seatPlanId, price, callAPI) {\r\n    if (callAPI) {\r\n        return (dispatch) => {\r\n            dispatch(setLoading(true));\r\n            return lockSeats(seatPlanId, selectedSeats).then(response => {\r\n                dispatch(lockSeatsAndPrice(selectedSeats, price, response))\r\n                dispatch(setLoading(false));\r\n            })         \r\n        }\r\n    }\r\n    else {\r\n        return (dispatch) => {\r\n            dispatch(lockSeatsAndPrice(selectedSeats, price, null))\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\screen\\Screen.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\screen.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatsAndPrice.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["245"],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"246","replacedBy":"250"},{"ruleId":"248","replacedBy":"251"},{"ruleId":"246","replacedBy":"252"},{"ruleId":"248","replacedBy":"253"},{"ruleId":"246","replacedBy":"254"},{"ruleId":"248","replacedBy":"255"},{"ruleId":"246","replacedBy":"256"},{"ruleId":"248","replacedBy":"257"},{"ruleId":"246","replacedBy":"258"},{"ruleId":"248","replacedBy":"259"},{"ruleId":"246","replacedBy":"260"},{"ruleId":"248","replacedBy":"261"},{"ruleId":"246","replacedBy":"262"},{"ruleId":"248","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"264","severity":1,"message":"268","line":3,"column":22,"nodeType":"266","messageId":"267","endLine":3,"endColumn":28},{"ruleId":"269","severity":1,"message":"270","line":383,"column":17,"nodeType":"271","endLine":387,"endColumn":19},{"ruleId":"264","severity":1,"message":"272","line":144,"column":7,"nodeType":"266","messageId":"267","endLine":144,"endColumn":20},{"ruleId":"264","severity":1,"message":"273","line":13,"column":10,"nodeType":"266","messageId":"267","endLine":13,"endColumn":16},{"ruleId":"264","severity":1,"message":"274","line":4,"column":59,"nodeType":"266","messageId":"267","endLine":4,"endColumn":73},{"ruleId":"264","severity":1,"message":"275","line":15,"column":9,"nodeType":"266","messageId":"267","endLine":15,"endColumn":16},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],["276"],["277"],["276"],["277"],["276"],["277"],["276"],["277"],["276"],["277"],["276"],["277"],["276"],["277"],"no-unused-vars","'footerText' is defined but never used.","Identifier","unusedVar","'footer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'phoneErrorMsg' is assigned a value but never used.","'header' is defined but never used.","'setShowTimings' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
