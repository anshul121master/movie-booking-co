[{"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js":"1","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js":"2","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js":"3","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js":"4","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js":"5","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js":"6","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js":"7","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js":"8","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js":"9","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js":"10","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js":"11","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js":"12","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js":"13","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js":"14","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js":"15","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js":"16","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js":"17","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js":"18","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js":"19","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js":"20","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js":"21","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js":"22","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js":"23","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js":"24","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js":"25","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js":"26","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js":"27","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js":"28","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js":"29","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js":"30","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js":"31","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js":"32","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js":"33","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js":"34","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js":"35","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js":"36","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js":"37","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js":"38","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js":"39","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js":"40","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"43"},{"size":156,"mtime":1606720032227,"results":"44","hashOfConfig":"43"},{"size":548,"mtime":1607500270551,"results":"45","hashOfConfig":"43"},{"size":5317,"mtime":1607598806314,"results":"46","hashOfConfig":"43"},{"size":247,"mtime":1606900214206,"results":"47","hashOfConfig":"43"},{"size":235,"mtime":1606900214206,"results":"48","hashOfConfig":"43"},{"size":1382,"mtime":1606900214183,"results":"49","hashOfConfig":"43"},{"size":394,"mtime":1606900214200,"results":"50","hashOfConfig":"43"},{"size":1775,"mtime":1607500394773,"results":"51","hashOfConfig":"43"},{"size":2126,"mtime":1607594058336,"results":"52","hashOfConfig":"43"},{"size":902,"mtime":1607505402790,"results":"53","hashOfConfig":"43"},{"size":6161,"mtime":1607598095244,"results":"54","hashOfConfig":"43"},{"size":1877,"mtime":1607497903831,"results":"55","hashOfConfig":"43"},{"size":231,"mtime":1606900214204,"results":"56","hashOfConfig":"43"},{"size":237,"mtime":1606900214203,"results":"57","hashOfConfig":"43"},{"size":297,"mtime":1606720032275,"results":"58","hashOfConfig":"43"},{"size":241,"mtime":1607497903909,"results":"59","hashOfConfig":"43"},{"size":226,"mtime":1606900214204,"results":"60","hashOfConfig":"43"},{"size":232,"mtime":1606900214201,"results":"61","hashOfConfig":"43"},{"size":541,"mtime":1607584508151,"results":"62","hashOfConfig":"43"},{"size":242,"mtime":1607584538147,"results":"63","hashOfConfig":"43"},{"size":259,"mtime":1606900214199,"results":"64","hashOfConfig":"43"},{"size":2744,"mtime":1607497903898,"results":"65","hashOfConfig":"43"},{"size":919,"mtime":1606900214199,"results":"66","hashOfConfig":"43"},{"size":627,"mtime":1606900214201,"results":"67","hashOfConfig":"43"},{"size":13491,"mtime":1607609476895,"results":"68","hashOfConfig":"43"},{"size":1630,"mtime":1607591229424,"results":"69","hashOfConfig":"43"},{"size":9176,"mtime":1607598630032,"results":"70","hashOfConfig":"43"},{"size":3477,"mtime":1607497903849,"results":"71","hashOfConfig":"43"},{"size":2618,"mtime":1607497903843,"results":"72","hashOfConfig":"43"},{"size":8302,"mtime":1607500693213,"results":"73","hashOfConfig":"43"},{"size":3489,"mtime":1607503022842,"results":"74","hashOfConfig":"43"},{"size":811,"mtime":1607497903840,"results":"75","hashOfConfig":"43"},{"size":3077,"mtime":1607497903844,"results":"76","hashOfConfig":"43"},{"size":2112,"mtime":1607497903835,"results":"77","hashOfConfig":"43"},{"size":1617,"mtime":1607497903846,"results":"78","hashOfConfig":"43"},{"size":1385,"mtime":1607497903826,"results":"79","hashOfConfig":"43"},{"size":3430,"mtime":1607497903842,"results":"80","hashOfConfig":"43"},{"size":971,"mtime":1607497903837,"results":"81","hashOfConfig":"43"},{"size":8979,"mtime":1607598733101,"results":"82","hashOfConfig":"43"},{"size":140,"mtime":1607544076655,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1m7sr9s",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\reportWebVitals.js",[],["181","182"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\index.js",[],["183","184"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\index.js",[],["185","186"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signin\\SignIn.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theater.js",[],["187","188"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\theme.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\MovieContainer.js",["189","190"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMovieAndTheaterList } from '../../../store/actions/shared';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass MovieContainer extends Component {\r\n    state = {\r\n        movieSelected: false\r\n    }\r\n\r\n    handleSelectedMovie = (movie) => {\r\n        const { dispatch } = this.props;\r\n        const { movieSelected } = this.state;\r\n        dispatch(setMovieAndTheaterList(movie));\r\n        this.setState({\r\n            movieSelected: true\r\n        })\r\n            // dispatch movie object and theatersList to store\r\n            // setstate to true\r\n            // navigate to moviepage\r\n    }\r\n\r\n    render() {\r\n        const { moviesList } = this.props;\r\n        if(this.state.movieSelected === true) {\r\n            return <Redirect to='/moviePage' />\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                MovieContainer\r\n                {/* iterate over moviesList and render movie cards */}\r\n                {/* {moviesList.map(movie => \r\n                <MovieCard key={movie.movieId} movieDetails ={movie} handleSelectedMovie={this.handleSelectedMovie}/> \r\n                )} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({moviesList}) {\r\n    return {\r\n        moviesList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieContainer)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\shared.js",["191","192","193","194"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\App.js",["195","196"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\index.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\utils\\api.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\Home.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\moviesList.js",[],["197","198"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\middlewares\\logger.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\theatersList.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\seatPlan.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\city.js",[],["199","200"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\reducers\\authedUser.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\city.js",["201"],"import { getShowTimings } from '../../utils/api'\r\n\r\n//add selected city action creator\r\nexport const SET_SELECTED_CITY = 'SET_SELECTED_CITY'\r\n\r\nexport function setSelectedCity(city) {\r\n    return {\r\n        type: SET_SELECTED_CITY,\r\n        city\r\n    }\r\n}\r\n\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\footer\\Footer.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\header\\Header.js",["202"],"import React, {Component} from 'react'\r\nimport { getMovies } from '../../utils/api'\r\nimport { connect } from 'react-redux'\r\nimport { setCityAndMoviesList } from '../../store/actions/shared'\r\n\r\nclass Header extends Component {\r\n    onCityChange = (event) => {\r\n        const cityId= event.target.value;\r\n        const { listOfCities, dispatch } = this.props; // from home component\r\n        const selectedCityObject = listOfCities.filter(city => city.id === cityId);\r\n        dispatch(setCityAndMoviesList(selectedCityObject[0]))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Header\r\n                {/* populate city dropdown based on listOfCities */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }, ownProps) {\r\n    const { listOfCities } = ownProps;\r\n    return { \r\n        listOfCities\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)",["203","204"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\theater.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\profile\\Profile.js",["205"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getProfile } from \"../../utils/api\";\r\nimport { uploadImage } from \"../../utils/api\";\r\nimport { updateProfile } from \"../../utils/api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Copyright from '../../shared-components/Copyright'\r\n\r\nconst styles = (theme) => ({\r\n  profileInfoDiv: {\r\n    width: \"100vw\",\r\n    height: \"30vh\",\r\n    backgroundColor: \"grey\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"50px\",\r\n  },\r\n  cardStyle: {\r\n    minWidth: \"70vw\",\r\n    boxShadow: \"5px 10px 18px #888888\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  profileImg: {\r\n    width: \"126px\",\r\n    height: \"126px\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    padding: \"2px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  userIcon: {\r\n    color: \"grey\",\r\n    border: \"4px solid #0A79DF\",\r\n    borderRadius: \"100px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  successMessageColor: {\r\n    color: \"green\",\r\n  },\r\n  failedMessageColor: {\r\n    color: \"red\",\r\n  },\r\n  loadingPanel: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    zIndex: 100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    fnameIsValid: true,\r\n    lnameIsValid: true,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    birthday: \"\",\r\n    imageUrl: \"\",\r\n    infoMessage: \"\",\r\n    loadProfileMessage: \"\",\r\n    imageUploadErrorMessage: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getProfile().then((res) => {\r\n      if (res.status === 200) {\r\n        let userProfile = res.response;\r\n        const birthday = this.formatDate(userProfile.dateOfBirth);\r\n        this.setState({\r\n          loadProfileMessage: \"\",\r\n          firstName: userProfile.fullName.split(\" \")[0],\r\n          lastName: userProfile.fullName.split(\" \")[1],\r\n          email: userProfile.email,\r\n          phone: userProfile.phoneNumber,\r\n          birthday,\r\n          imageUrl: userProfile.imageUrl,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loadProfileMessage: res.exception.errorMsg,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  validateName = (event) => {\r\n    const field = event.target.name;\r\n    const name = event.target.value;\r\n    if (field === \"firstName\") {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          firstName: name,\r\n          fnameIsValid: true,\r\n        });\r\n    } else {\r\n      if (!(name.match(/^[A-Za-z]+$/) || name === \"\"))\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: false,\r\n        });\r\n      else\r\n        this.setState({\r\n          lastName: name,\r\n          lnameIsValid: true,\r\n        });\r\n    }\r\n  };\r\n\r\n  onImageUpload = (event) => {\r\n    console.log(\"onImageupload called\");\r\n    const imageObj = event.target.files[0];\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append(\"profilePhoto\", imageObj);\r\n\r\n    uploadImage(formData).then((res) => {\r\n      if (res.status === 200) {\r\n        const imageUrl = res.response.imageUrl;\r\n        this.setState({\r\n          imageUploadErrorMessage: \"\",\r\n          imageUrl,\r\n        });\r\n      } else\r\n        this.setState({\r\n          imageUploadErrorMessage: res.exception.errorMsg,\r\n        });\r\n    });\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n  //   validatePhone = (event) => {\r\n  //     const phone = event.target.value;\r\n  //     console.log(phone.length)  //15 for india\r\n  //   };\r\n\r\n  setBirthday = (event) => {\r\n    const birthday = event.target.value;\r\n    this.setState({\r\n      birthday,\r\n    });\r\n  };\r\n\r\n  setPhone = (event) => {\r\n    const phone = event.target.value;\r\n    this.setState({\r\n      phone,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"handleSubmit clicked\");\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n    } = this.state;\r\n    if (fnameIsValid === true && lnameIsValid === true) {\r\n      console.log(\"all fields contains valid inputs\");\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      let userInfo = {\r\n        fullName: `${firstName} ${lastName}`,\r\n        email,\r\n        phoneNumber: phone,\r\n        dateOfBirth: birthday,\r\n        imageUrl,\r\n      };\r\n      updateProfile(userInfo).then((res) => {\r\n        if (res.status === 200)\r\n          this.setState({\r\n            infoMessage: \"Profile Updated Successfully\",\r\n            loading: false,\r\n          });\r\n        else\r\n          this.setState({\r\n            infoMessage: res.exception.errorMsg,\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      fnameIsValid,\r\n      lnameIsValid,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      imageUrl,\r\n      infoMessage,\r\n      imageUploadErrorMessage,\r\n      loadProfileMessage,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Grid container justify=\"center\">\r\n          <Card className={classes.cardStyle} variant=\"outlined\">\r\n            <CardContent>\r\n              <div className={classes.paper}>\r\n                {loadProfileMessage !== \"\" && (\r\n                  <Typography className={classes.failedMessageColor}>\r\n                    {loadProfileMessage}\r\n                  </Typography>\r\n                )}\r\n                {imageUrl === \"\" ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faUserCircle}\r\n                    size=\"9x\"\r\n                    className={classes.userIcon}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={`https://moviebooking.co/user-profile-photos/${imageUrl}`}\r\n                    alt=\"profile image\"\r\n                    className={classes.profileImg}\r\n                  />\r\n                )}\r\n                {imageUploadErrorMessage !== \"\" && (\r\n                  <Typography className={classes.failedMessageColor}>\r\n                    {imageUploadErrorMessage}\r\n                  </Typography>\r\n                )}\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"icon-button-file\"\r\n                  type=\"file\"\r\n                  onChange={this.onImageUpload}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  My Profile\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"firstName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        value={firstName}\r\n                        error={fnameIsValid ? false : true}\r\n                        helperText={\r\n                          fnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        value={lastName}\r\n                        autoComplete=\"lname\"\r\n                        error={lnameIsValid ? false : true}\r\n                        helperText={\r\n                          lnameIsValid ? \"\" : \"Should contain only alphabets\"\r\n                        }\r\n                        onChange={this.validateName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        type=\"email\"\r\n                        autoComplete=\"email\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <MuiPhoneNumber\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Mobile Number\"\r\n                        name=\"phone\"\r\n                        value={phone}\r\n                        defaultCountry={\"in\"}\r\n                        autoComplete=\"phone\"\r\n                        onBlur={this.setPhone}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"date\"\r\n                        label=\"Birthday\"\r\n                        name=\"date\"\r\n                        defaultValue={birthday}\r\n                        type=\"date\"\r\n                        autoComplete=\"date\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        onBlur={this.setBirthday}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  {loading && (\r\n                    <Grid container spacing={5} justify=\"center\">\r\n                      <Grid item>\r\n                        <CircularProgress />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Update Changes\r\n                  </Button>\r\n                  <Grid container justify=\"flex-start\">\r\n                    <Grid item>\r\n                      <Typography\r\n                        className={\r\n                          infoMessage.includes(\"Successfully\")\r\n                            ? classes.successMessageColor\r\n                            : classes.failedMessageColor\r\n                        }\r\n                      >\r\n                        {infoMessage}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Link href=\"/\" variant=\"body2\">\r\n                        Proceed to home\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Profile);\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\config\\apiConfig.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\ForgotPassword.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\purchase\\payment-form\\PaymentForm.js",["206"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { DoneAllRounded } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass PaymentForm extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='payment-form'>\r\n                <Card variant='outlined'>\r\n                    <CardContent>\r\n                        {this.props.bookingStatus === '' ? (<div className=\"checkout\">\r\n                            <div className=\"checkout-container\">\r\n                                <form onSubmit={(event) => this.props.purchaseTicket(event)}>\r\n                                    <h3 className=\"heading-3\">Credit / Debit card checkout</h3>\r\n                                    <Input label=\"Cardholder's Name\" type=\"text\" name=\"name\" />\r\n                                    <Input label=\"Card Number\" type=\"number\" name=\"card_number\" />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <Input label=\"Expiration Date\" type=\"month\" name=\"exp_date\" />\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Input label=\"CVV\" type=\"password\" name=\"cvv\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button text=\"Purchase\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        ) :\r\n                            (<div className='booking-checkout-container'>\r\n                                <DoneAllRounded fontSize='large' style={{ color: 'green' }} />\r\n                                <div style={{ margin: '5', fontSize: '2em' }}>Booking Confirmed</div>\r\n                                <div></div>\r\n                                <Link style={{ textDecoration: 'none' }} to={{\r\n                                    pathname: \"/\",\r\n                                }}>Click to go to Home Page</Link>\r\n                            </div>\r\n                            )\r\n                        }\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Input = (props) => (\r\n    <div className=\"input\">\r\n        <label>{props.label}</label>\r\n        <div className=\"input-field\">\r\n            <input type={props.type} name={props.name} required />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst Button = (props) => (\r\n    <button type='submit' className=\"checkout-btn\">{props.text}</button>\r\n);\r\n\r\nconst mapStateToProps = ({ /*theater, selectedSeats, price, movie, time, date, seatPlanId */ }) => {\r\n    const theater = {\r\n        \"screenName\": \"s2\",\r\n        \"dimension\": \"_2D\",\r\n        \"name\": 'PVR Cinemas',\r\n        \"city\": \"Mumbai\"\r\n    }\r\n    const selectedSeats = ['GR1C1', 'GR1C2']\r\n    const price = 450\r\n    const movie = {\r\n        \"name\": \"Jab tak hai jaan\",\r\n        \"genre\": \"Romance\",\r\n    }\r\n    const time = 'S21'\r\n    const date = '2020-11-30'\r\n    const seatPlanId = \"e5c7b582-03c0-492f-8fe9-1026e5be461c\"\r\n\r\n    return { theater, selectedSeats, price, movie, time, date, seatPlanId }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(PaymentForm)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterContainer.js",["207"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TheaterCard from './TheaterCard'\r\n\r\nclass TheaterContainer extends Component {\r\n    state = {\r\n        selectedDate: new Date(new Date()).toISOString().split('T')[0]\r\n    }\r\n\r\n    getDateValue = (value) => {\r\n        const d = new Date()\r\n        d.setDate(d.getDate() + value)\r\n        return {\r\n            day: d.getDate(),\r\n            name: d.toString().split(' ')[0],\r\n            date: d.toISOString().split('T')[0]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { theatersList } = this.props;\r\n        const { selectedDate } = this.state;\r\n        return (\r\n            <div>\r\n                {/* calender Component render and pass the value to theatercard- 1 week */\r\n                    console.log(selectedDate)\r\n                }\r\n                <div className='date-container'>\r\n                    {Array.from(Array(7).keys()).map((value) =>\r\n                        selectedDate === this.getDateValue(value).date ?\r\n                            <div className='date active' key={value} onClick={() =>\r\n                                this.setState({\r\n                                    selectedDate: this.getDateValue(value).date\r\n                                })\r\n                            }>\r\n                                <span className='span-date'>{this.getDateValue(value).day}</span>\r\n                                <span className='span-name'>{this.getDateValue(value).name}</span>\r\n                            </div> :\r\n                            <div className='date' key={value} onClick={() =>\r\n                                this.setState({\r\n                                    selectedDate: this.getDateValue(value).date\r\n                                })\r\n                            }>\r\n                                <span className='span-date'>{this.getDateValue(value).day}</span>\r\n                                <span className='span-name'>{this.getDateValue(value).name}</span>\r\n                            </div>)}\r\n                </div>\r\n                {/* iterate over theatersList and render theater cards */}\r\n                <div className='theatre-container'>\r\n                    {Array.from(Array(3).keys()).map(theater =>\r\n                        <TheaterCard key={theater} theater={theater} selectedDate={selectedDate} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ theatersList }) {\r\n    return {\r\n        theatersList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TheaterContainer)","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\theater-container\\TheaterCard.js",["208"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getScreens } from '../../../utils/api'\r\nimport { setTheaterAndSeatPlan } from '../../../store/actions/shared'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport compose from 'recompose/compose';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { header, headerText, buttonAvailable, buttonAvailableText } from '../../../theme'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: '60%',\r\n        height: '10%',\r\n        margin: '10px',\r\n        fontSize: '0.75em'\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: header,\r\n        color: headerText\r\n    },\r\n    action: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        color: buttonAvailableText,\r\n        backgroundColor: buttonAvailable,\r\n        margin: 7\r\n    }\r\n});\r\n\r\n\r\nclass TheaterCard extends Component {\r\n    state = {\r\n        expanded: false,\r\n        screens: null,\r\n        screenTimesArray: ['S12', 'S15', 'S18', 'S21', 'S23'],\r\n        open: false,\r\n        redirect: false\r\n    }\r\n\r\n    //when show timing btn is clicked\r\n    getScreenObject = (theater) => {\r\n        const { selectedMovie } = this.props;\r\n        getScreens(selectedMovie.movieId, theater.theaterId)\r\n            .then((screens) => {\r\n\r\n                let screenTimeArray = []\r\n                screens.forEach(screen => {\r\n                    screenTimeArray = screenTimeArray.concat(screen.screenTimes.map(time => time.showTiming))\r\n                })\r\n\r\n                this.setState({\r\n                    screens: screens,\r\n                    screenTimeArray: screenTimeArray\r\n                })\r\n            })\r\n    }\r\n\r\n    //when clicked on any show time\r\n    handleSelectedShowTime = (theater, time) => {\r\n        const { selectedDate } = this.props; // format YYYY-MM-DD\r\n        const { screens } = this.state;\r\n        const screen = screens.filter(screen => screen.screenTimes\r\n            .map(screenTime => screenTime.showTiming).includes(time))\r\n        const screenTime = screen[0].screenTimes.filter(screenTime => screenTime.showTiming === time)\r\n        const seatPlanId = screenTime[0].showDateList.filter\r\n            ((showDate => showDate.moviePlayingDate.split('T')[0] === selectedDate))[0].seatPlanId\r\n        //get seatPlanId from state based on time(S20) and date(2020-11-30)\r\n\r\n    setTheaterAndSeatPlan(theater, seatPlanId);\r\n    //navigate to seat plan page\r\n  };\r\n\r\n    handleExpandClick = () => {\r\n        this.setState(currentState => {\r\n            return {\r\n                expanded: !currentState.expanded\r\n            }\r\n        })\r\n\r\n        //this.getScreenObject(this.props.theater)\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    };\r\n\r\n    handleClose = (redirect) => {\r\n        this.setState({\r\n            open: false,\r\n            redirect\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { theater, classes } = this.props;\r\n        const { screenTimesArray } = this.state;\r\n        return (\r\n            this.state.redirect ? (<Redirect to={{ pathname: '/screen' }} />) :\r\n                (<Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                {/* {theater.rating} */}4.5\r\n                        </Avatar>\r\n                        }\r\n                        title=\"PVR Cinemas\"\r\n                        subheader=\"Near CST Railway Station, Mumbai - 201006, Maharashtra\"\r\n                    />\r\n                    <CardActions className={classes.action}>\r\n                        <Tooltip title=\"Expand to check on movie screening times\" aria-label=\"add\">\r\n                            <IconButton\r\n                                className={clsx(classes.expand, {\r\n                                    [classes.expandOpen]: this.state.expanded,\r\n                                })}\r\n                                onClick={this.handleExpandClick}\r\n                                aria-expanded={this.state.expanded}\r\n                                aria-label=\"show more\"\r\n                            >\r\n                                <ExpandMoreIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </CardActions>\r\n                    <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                        <CardContent className={classes.content}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Show Timings :</Typography>\r\n                            {screenTimesArray.map(time =>\r\n                                <div>\r\n                                    <Button className={classes.button} onClick={this.handleClickOpen}>\r\n                                        {time.split('S')[1]}:00\r\n                                </Button>\r\n                                    <Dialog\r\n                                        open={this.state.open}\r\n                                        onClose={this.handleClose}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to navigate to seat selection page?\"}</DialogTitle>\r\n                                        <DialogContent>\r\n                                            <DialogContentText id=\"alert-dialog-description\">\r\n                                                Do you want to navigate to seat selection page for {time.split('S')[1]}:00 tickets?\r\n                              </DialogContentText>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button onClick={() => this.handleClose(false)}>\r\n                                                No\r\n                                        </Button>\r\n                                            <Button onClick={() => this.handleClose(true)} autoFocus>\r\n                                                Yes\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                </div>\r\n                            )}\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>)\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ selectedMovie }, ownProps) {\r\n    const { theater, selectedDate } = ownProps;\r\n    return {\r\n        theater,\r\n        selectedMovie,\r\n        selectedDate\r\n    }\r\n}\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(TheaterCard);\r\n\r\n\r\n","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\shared-components\\ticket\\Ticket.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\Movie.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\MyBookings.js",["209","210","211"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCard.js",["212","213","214","215"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {Paper } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    minWidth: 100\r\n  },\r\n});\r\n\r\nexport default function MovieCard(props) {\r\n  const classes = useStyles();\r\n  const {movie, handleSelectedMovie} = props;\r\n\r\n  return (\r\n      (movie !== undefined &&\r\n        <Paper style={{width:'100%'}} onClick={()=> handleSelectedMovie(movie)} >\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={movie.name}\r\n          height=\"140\"\r\n          image=\"/moviePoster.jpg\"\r\n          //{movie.moviePoster}\r\n          title=\"Movie\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {movie.name}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h4\">\r\n            {movie.movieDimension}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h4\">\r\n            {movie.genre}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h5\">\r\n                {movie.rating}\r\n            </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {/* <CardActions>\r\n        <IconButton aria-label=\"rating\">\r\n            <StarIcon />\r\n            </IconButton>\r\n            <Typography gutterBottom variant=\"body1\" component=\"h5\">\r\n                {movie.rating}\r\n            </Typography>\r\n      </CardActions> */}\r\n    </Card>\r\n    </Paper>\r\n      )\r\n  );\r\n}","C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\myBookings\\bookingHistory\\BookingHistory.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\City.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\movie\\movie-details\\MovieDetails.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\home\\movie-container\\components\\MovieCarousel.js",["216","217","218"],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\containers\\signupandforgotpwd\\SignUp.js",[],"C:\\Users\\HP\\Desktop\\xcorps projects\\movie-booking-co\\src\\store\\actions\\loading.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"219","replacedBy":"223"},{"ruleId":"221","replacedBy":"224"},{"ruleId":"219","replacedBy":"225"},{"ruleId":"221","replacedBy":"226"},{"ruleId":"219","replacedBy":"227"},{"ruleId":"221","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":13,"column":17,"nodeType":"231","messageId":"232","endLine":13,"endColumn":30},{"ruleId":"229","severity":1,"message":"233","line":24,"column":17,"nodeType":"231","messageId":"232","endLine":24,"endColumn":27},{"ruleId":"229","severity":1,"message":"234","line":3,"column":34,"nodeType":"231","messageId":"232","endLine":3,"endColumn":44},{"ruleId":"229","severity":1,"message":"235","line":3,"column":70,"nodeType":"231","messageId":"232","endLine":3,"endColumn":85},{"ruleId":"229","severity":1,"message":"236","line":4,"column":59,"nodeType":"231","messageId":"232","endLine":4,"endColumn":73},{"ruleId":"229","severity":1,"message":"237","line":5,"column":8,"nodeType":"231","messageId":"232","endLine":5,"endColumn":16},{"ruleId":"229","severity":1,"message":"238","line":2,"column":21,"nodeType":"231","messageId":"232","endLine":2,"endColumn":30},{"ruleId":"229","severity":1,"message":"239","line":12,"column":8,"nodeType":"231","messageId":"232","endLine":12,"endColumn":18},{"ruleId":"219","replacedBy":"240"},{"ruleId":"221","replacedBy":"241"},{"ruleId":"219","replacedBy":"242"},{"ruleId":"221","replacedBy":"243"},{"ruleId":"229","severity":1,"message":"244","line":1,"column":10,"nodeType":"231","messageId":"232","endLine":1,"endColumn":24},{"ruleId":"229","severity":1,"message":"238","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":19},{"ruleId":"219","replacedBy":"245"},{"ruleId":"221","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":274,"column":19,"nodeType":"249","endLine":278,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":64,"column":26,"nodeType":"252","messageId":"253","endLine":64,"endColumn":95},{"ruleId":"229","severity":1,"message":"254","line":21,"column":17,"nodeType":"231","messageId":"232","endLine":21,"endColumn":29},{"ruleId":"229","severity":1,"message":"255","line":131,"column":17,"nodeType":"231","messageId":"232","endLine":131,"endColumn":24},{"ruleId":"229","severity":1,"message":"256","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":14},{"ruleId":"229","severity":1,"message":"257","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":20},{"ruleId":"229","severity":1,"message":"258","line":10,"column":22,"nodeType":"231","messageId":"232","endLine":10,"endColumn":37},{"ruleId":"229","severity":1,"message":"259","line":5,"column":8,"nodeType":"231","messageId":"232","endLine":5,"endColumn":19},{"ruleId":"229","severity":1,"message":"260","line":8,"column":8,"nodeType":"231","messageId":"232","endLine":8,"endColumn":14},{"ruleId":"229","severity":1,"message":"261","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":18},{"ruleId":"229","severity":1,"message":"262","line":11,"column":8,"nodeType":"231","messageId":"232","endLine":11,"endColumn":16},{"ruleId":"229","severity":1,"message":"263","line":13,"column":9,"nodeType":"231","messageId":"232","endLine":13,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":21,"column":33,"nodeType":"249","endLine":21,"endColumn":115},{"ruleId":"264","severity":1,"message":"265","line":22,"column":19,"nodeType":"249","endLine":22,"endColumn":105},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],["266"],["267"],["266"],["267"],["266"],["267"],"no-unused-vars","'movieSelected' is assigned a value but never used.","Identifier","unusedVar","'moviesList' is assigned a value but never used.","'getScreens' is defined but never used.","'purchaseTickets' is defined but never used.","'setShowTimings' is defined but never used.","'seatPlan' is defined but never used.","'getMovies' is defined but never used.","'MyBookings' is defined but never used.",["266"],["267"],["266"],["267"],"'getShowTimings' is defined but never used.",["266"],["267"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'theatersList' is assigned a value but never used.","'theater' is assigned a value but never used.","'Footer' is defined but never used.","'background' is defined but never used.","'buttonAvailable' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'StarIcon' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]